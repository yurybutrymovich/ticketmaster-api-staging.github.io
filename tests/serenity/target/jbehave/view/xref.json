{"xref": {
  "stories": [
    {
      "story": {
        "path": "stories/site/Blogs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Blogs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Blogs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Blogs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Blogs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 17,
                  "start": 1489740200247,
                  "end": 1489740200264
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Blogs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Blogs page",
                  "durationInMillis": 5088,
                  "start": 1489740200269,
                  "end": 1489740205357
                },
                {
                  "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40414,
                  "start": 1489740205360,
                  "end": 1489740245774
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 54,
                  "start": 1489740245776,
                  "end": 1489740245830
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740245830,
                  "end": 1489740245831
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/blogs/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Blogs page",
                "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 45815,
        "start": 1489740200197,
        "end": 1489740246012
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Events.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Events Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Events.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Events Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/Events.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 5,
                  "start": 1489740246034,
                  "end": 1489740246039
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Events page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Events page",
                  "durationInMillis": 1988,
                  "start": 1489740246039,
                  "end": 1489740248027
                },
                {
                  "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10243,
                  "start": 1489740248028,
                  "end": 1489740258271
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1489740258272,
                  "end": 1489740258304
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740258304,
                  "end": 1489740258304
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/events/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Events page",
                "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12346,
        "start": 1489740246027,
        "end": 1489740258373
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Home.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Home Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        ],
        "name": "Home.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Home Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1489740258379,
                  "end": 1489740258381
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 4863,
                  "start": 1489740258381,
                  "end": 1489740263244
                },
                {
                  "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20274,
                  "start": 1489740263245,
                  "end": 1489740283519
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39,
                  "start": 1489740283521,
                  "end": 1489740283560
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740283560,
                  "end": 1489740283560
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for general page elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740283631,
                  "end": 1489740283632
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2265,
                  "start": 1489740283632,
                  "end": 1489740285897
                },
                {
                  "step": "Then check that Twitter's list of events is shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that Twitter's list of events is shown",
                  "durationInMillis": 169,
                  "start": 1489740285899,
                  "end": 1489740286068
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39,
                  "start": 1489740286069,
                  "end": 1489740286108
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740286108,
                  "end": 1489740286109
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for twitter's list of events",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check that Twitter's list of events is shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Your API Key"
                ],
                [
                  "pageURL",
                  "https://developer-acct.ticketmaster.com/user/login"
                ],
                [
                  "elementLocation",
                  "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2199,
                    "start": 1489740286190,
                    "end": 1489740288389
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                    "durationInMillis": 2067,
                    "start": 1489740288390,
                    "end": 1489740290457
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                    "durationInMillis": 230,
                    "start": 1489740290458,
                    "end": 1489740290688
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Review Documentation"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/getting-started/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2358,
                    "start": 1489740290753,
                    "end": 1489740293111
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                    "durationInMillis": 1287,
                    "start": 1489740293113,
                    "end": 1489740294400
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                    "durationInMillis": 572,
                    "start": 1489740294402,
                    "end": 1489740294974
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Explore The API"
                ],
                [
                  "pageURL",
                  "{url}/api-explorer/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2758,
                    "start": 1489740295129,
                    "end": 1489740297887
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                    "durationInMillis": 3726,
                    "start": 1489740297888,
                    "end": 1489740301614
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                    "durationInMillis": 97,
                    "start": 1489740301615,
                    "end": 1489740301712
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Android"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#android-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 5006,
                    "start": 1489740301787,
                    "end": 1489740306793
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                    "durationInMillis": 216,
                    "start": 1489740306795,
                    "end": 1489740307011
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                    "durationInMillis": 1557,
                    "start": 1489740307012,
                    "end": 1489740308569
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Backend"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#backend-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3071,
                    "start": 1489740308635,
                    "end": 1489740311706
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                    "durationInMillis": 480,
                    "start": 1489740311707,
                    "end": 1489740312187
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                    "durationInMillis": 42,
                    "start": 1489740312188,
                    "end": 1489740312230
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "iOS"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#iOS-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3057,
                    "start": 1489740312298,
                    "end": 1489740315355
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                    "durationInMillis": 499,
                    "start": 1489740315356,
                    "end": 1489740315855
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                    "durationInMillis": 36,
                    "start": 1489740315857,
                    "end": 1489740315893
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Web"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#web-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2674,
                    "start": 1489740315959,
                    "end": 1489740318633
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                    "durationInMillis": 506,
                    "start": 1489740318634,
                    "end": 1489740319140
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                    "durationInMillis": 37,
                    "start": 1489740319141,
                    "end": 1489740319178
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Tech blog"
                ],
                [
                  "pageURL",
                  "https://tech.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//h1[@class='site-title']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3799,
                    "start": 1489740319250,
                    "end": 1489740323049
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                    "durationInMillis": 251,
                    "start": 1489740323050,
                    "end": 1489740323301
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                    "durationInMillis": 3079,
                    "start": 1489740323303,
                    "end": 1489740326382
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Medium Publication"
                ],
                [
                  "pageURL",
                  "https://medium.com/ticketmaster-tech"
                ],
                [
                  "elementLocation",
                  "//h2[text()='Because Engineers are Fans Too!']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2691,
                    "start": 1489740326464,
                    "end": 1489740329155
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                    "durationInMillis": 234,
                    "start": 1489740329157,
                    "end": 1489740329391
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                    "durationInMillis": 1332,
                    "start": 1489740329392,
                    "end": 1489740330724
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Partner API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/partner/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2120,
                    "start": 1489740330788,
                    "end": 1489740332908
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                    "durationInMillis": 326,
                    "start": 1489740332910,
                    "end": 1489740333236
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                    "durationInMillis": 1437,
                    "start": 1489740333238,
                    "end": 1489740334675
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Deals API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/deals-api/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2451,
                    "start": 1489740334740,
                    "end": 1489740337191
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                    "durationInMillis": 1720,
                    "start": 1489740337192,
                    "end": 1489740338912
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                    "durationInMillis": 288,
                    "start": 1489740338913,
                    "end": 1489740339201
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Legacy docs"
                ],
                [
                  "pageURL",
                  "http://apidocs.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//td[@class='WikiLogoName']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3999,
                    "start": 1489740339279,
                    "end": 1489740343278
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                    "durationInMillis": 196,
                    "start": 1489740343279,
                    "end": 1489740343475
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                    "durationInMillis": 1486,
                    "start": 1489740343476,
                    "end": 1489740344962
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 86650,
        "start": 1489740258378,
        "end": 1489740345028
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/OpenSource.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Open Source Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "OpenSource.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Open Source Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/OpenSource.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Open Source"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/"
                ],
                [
                  "pageTitle",
                  "//h1[@id='logo']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4076,
                    "start": 1489740345034,
                    "end": 1489740349110
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                    "durationInMillis": 358,
                    "start": 1489740349111,
                    "end": 1489740349469
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                    "durationInMillis": 23,
                    "start": 1489740349470,
                    "end": 1489740349493
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/blogs/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Open Source"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/"
                      ],
                      [
                        "pageTitle",
                        "//h1[@id='logo']"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4527,
        "start": 1489740345031,
        "end": 1489740349558
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Search.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Search Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Search.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Search Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Search.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "searchRequest",
                  "test"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4086,
                    "start": 1489740349563,
                    "end": 1489740353649
                  },
                  {
                    "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                    "durationInMillis": 371,
                    "start": 1489740353651,
                    "end": 1489740354022
                  },
                  {
                    "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                    "durationInMillis": 22424,
                    "start": 1489740354024,
                    "end": 1489740376448
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/search/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "| searchRequest |\n|      test     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "searchRequest"
                  ],
                  "data": [
                    [
                      [
                        "searchRequest",
                        "test"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "And insert Search Parameter <searchRequest> and navigate to Search page",
                  "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 26956,
        "start": 1489740349560,
        "end": 1489740376516
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/AffiliateID.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "user",
          "iWantTo": "perform an action",
          "soThat": "I can achieve a business goal"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "scenario description",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a system state",
              "When I do something",
              "Then system is in a different state"
            ]
          }
        ],
        "name": "AffiliateID.story"
      },
      "localizedNarrative": "As a user\nI want to perform an action\nSo that I can achieve a business goal",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/CreateNewAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Create New Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click Create New Account on Register Page",
              "Then the message I agree to the Terms of Use field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message First Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Last Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Name field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Site URL field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Username field is required. is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message E-mail address field is required. is displayed"
            ]
          }
        ],
        "name": "CreateNewAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Create New Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2281,
                  "start": 1489740376522,
                  "end": 1489740378803
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1121,
                  "start": 1489740378804,
                  "end": 1489740379925
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 996,
                  "start": 1489740379926,
                  "end": 1489740380922
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 4,
                  "start": 1489740380932,
                  "end": 1489740380936
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Then check general page elements for Pantheon Create New Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
                  "durationInMillis": 20430,
                  "start": 1489740380937,
                  "end": 1489740401367
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1489740401367,
                  "end": 1489740401394
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740401394,
                  "end": 1489740401395
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Then check general page elements for Pantheon Create New Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2567,
                  "start": 1489740401467,
                  "end": 1489740404034
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1056,
                  "start": 1489740404035,
                  "end": 1489740405091
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 1077,
                  "start": 1489740405092,
                  "end": 1489740406169
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740406169,
                  "end": 1489740406170
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 781,
                  "start": 1489740406170,
                  "end": 1489740406951
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 129,
                  "start": 1489740406953,
                  "end": 1489740407082
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1047,
                  "start": 1489740407082,
                  "end": 1489740408129
                },
                {
                  "step": "Then the message The answer you entered for the CAPTCHA was not correct. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟The answer you entered for the CAPTCHA was not correct.｠ is displayed",
                  "durationInMillis": 98,
                  "start": 1489740408130,
                  "end": 1489740408228
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 50,
                  "start": 1489740408228,
                  "end": 1489740408278
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740408278,
                  "end": 1489740408279
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "When click Create New Account on Register Page",
              "Then the message I agree to the Terms of Use field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3077,
                  "start": 1489740408357,
                  "end": 1489740411434
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 976,
                  "start": 1489740411435,
                  "end": 1489740412411
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 1109,
                  "start": 1489740412412,
                  "end": 1489740413521
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740413522,
                  "end": 1489740413523
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 653,
                  "start": 1489740413523,
                  "end": 1489740414176
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1107,
                  "start": 1489740414178,
                  "end": 1489740415285
                },
                {
                  "step": "Then the message I agree to the Terms of Use field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟I agree to the Terms of Use field is required.｠ is displayed",
                  "durationInMillis": 162,
                  "start": 1489740415286,
                  "end": 1489740415448
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489740415448,
                  "end": 1489740415482
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740415482,
                  "end": 1489740415483
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
                "When click Create New Account on Register Page",
                "Then the message I agree to the Terms of Use field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message First Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2509,
                  "start": 1489740415553,
                  "end": 1489740418062
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 964,
                  "start": 1489740418064,
                  "end": 1489740419028
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 969,
                  "start": 1489740419030,
                  "end": 1489740419999
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740419999,
                  "end": 1489740420000
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 681,
                  "start": 1489740420000,
                  "end": 1489740420681
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 112,
                  "start": 1489740420683,
                  "end": 1489740420795
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1013,
                  "start": 1489740420795,
                  "end": 1489740421808
                },
                {
                  "step": "Then the message First Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟First Name field is required.｠ is displayed",
                  "durationInMillis": 142,
                  "start": 1489740421808,
                  "end": 1489740421950
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1489740421950,
                  "end": 1489740421975
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740421975,
                  "end": 1489740421976
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message First Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Last Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 5164,
                  "start": 1489740422047,
                  "end": 1489740427211
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1019,
                  "start": 1489740427213,
                  "end": 1489740428232
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 939,
                  "start": 1489740428233,
                  "end": 1489740429172
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1489740429172,
                  "end": 1489740429174
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 663,
                  "start": 1489740429174,
                  "end": 1489740429837
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 139,
                  "start": 1489740429839,
                  "end": 1489740429978
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 953,
                  "start": 1489740429979,
                  "end": 1489740430932
                },
                {
                  "step": "Then the message Last Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Last Name field is required.｠ is displayed",
                  "durationInMillis": 143,
                  "start": 1489740430933,
                  "end": 1489740431076
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1489740431077,
                  "end": 1489740431104
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740431104,
                  "end": 1489740431104
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Last Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Name field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 4267,
                  "start": 1489740431169,
                  "end": 1489740435436
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 766,
                  "start": 1489740435437,
                  "end": 1489740436203
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 1076,
                  "start": 1489740436203,
                  "end": 1489740437279
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740437280,
                  "end": 1489740437281
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|］",
                  "durationInMillis": 697,
                  "start": 1489740437281,
                  "end": 1489740437978
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 119,
                  "start": 1489740437980,
                  "end": 1489740438099
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1062,
                  "start": 1489740438100,
                  "end": 1489740439162
                },
                {
                  "step": "Then the message Company Name field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Company Name field is required.｠ is displayed",
                  "durationInMillis": 158,
                  "start": 1489740439163,
                  "end": 1489740439321
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1489740439322,
                  "end": 1489740439351
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740439351,
                  "end": 1489740439352
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Company Name field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Company Site URL field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2155,
                  "start": 1489740439419,
                  "end": 1489740441574
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1110,
                  "start": 1489740441575,
                  "end": 1489740442685
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 970,
                  "start": 1489740442685,
                  "end": 1489740443655
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740443656,
                  "end": 1489740443657
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|］",
                  "durationInMillis": 753,
                  "start": 1489740443658,
                  "end": 1489740444411
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 137,
                  "start": 1489740444413,
                  "end": 1489740444550
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 1034,
                  "start": 1489740444551,
                  "end": 1489740445585
                },
                {
                  "step": "Then the message Company Site URL field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Company Site URL field is required.｠ is displayed",
                  "durationInMillis": 151,
                  "start": 1489740445586,
                  "end": 1489740445737
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1489740445737,
                  "end": 1489740445766
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740445766,
                  "end": 1489740445766
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Company Site URL field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message Username field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2292,
                  "start": 1489740445835,
                  "end": 1489740448127
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 999,
                  "start": 1489740448128,
                  "end": 1489740449127
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 887,
                  "start": 1489740449128,
                  "end": 1489740450015
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740450015,
                  "end": 1489740450016
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|］",
                  "durationInMillis": 697,
                  "start": 1489740450016,
                  "end": 1489740450713
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 123,
                  "start": 1489740450715,
                  "end": 1489740450838
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 903,
                  "start": 1489740450839,
                  "end": 1489740451742
                },
                {
                  "step": "Then the message Username field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Username field is required.｠ is displayed",
                  "durationInMillis": 137,
                  "start": 1489740451744,
                  "end": 1489740451881
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489740451882,
                  "end": 1489740451904
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740451904,
                  "end": 1489740451905
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message Username field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "When click checkbox Terms of Use",
              "When click Create New Account on Register Page",
              "Then the message E-mail address field is required. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2070,
                  "start": 1489740451970,
                  "end": 1489740454040
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 999,
                  "start": 1489740454041,
                  "end": 1489740455040
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 846,
                  "start": 1489740455041,
                  "end": 1489740455887
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740455888,
                  "end": 1489740455889
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |］",
                  "durationInMillis": 668,
                  "start": 1489740455889,
                  "end": 1489740456557
                },
                {
                  "step": "When click checkbox Terms of Use",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click checkbox Terms of Use",
                  "durationInMillis": 130,
                  "start": 1489740456560,
                  "end": 1489740456690
                },
                {
                  "step": "When click Create New Account on Register Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Create New Account on Register Page",
                  "durationInMillis": 869,
                  "start": 1489740456691,
                  "end": 1489740457560
                },
                {
                  "step": "Then the message E-mail address field is required. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟E-mail address field is required.｠ is displayed",
                  "durationInMillis": 163,
                  "start": 1489740457561,
                  "end": 1489740457724
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1489740457725,
                  "end": 1489740457757
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740457757,
                  "end": 1489740457758
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
                "When click checkbox Terms of Use",
                "When click Create New Account on Register Page",
                "Then the message E-mail address field is required. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 81311,
        "start": 1489740376521,
        "end": 1489740457832
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/EditProfile.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Edit Profile Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          }
        ],
        "name": "EditProfile.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Edit Profile Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          },
          "storyPath": "stories/site/pantheon/EditProfile.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740457838,
                  "end": 1489740457839
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2254,
                  "start": 1489740457839,
                  "end": 1489740460093
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 759,
                  "start": 1489740460094,
                  "end": 1489740460853
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2996,
                  "start": 1489740460854,
                  "end": 1489740463850
                },
                {
                  "step": "When navigate to Pantheon Edit Profile page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
                  "durationInMillis": 2904,
                  "start": 1489740463851,
                  "end": 1489740466755
                },
                {
                  "step": "Then check general page elements for Pantheon Edit Profile page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
                  "durationInMillis": 20325,
                  "start": 1489740466756,
                  "end": 1489740487081
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27,
                  "start": 1489740487082,
                  "end": 1489740487109
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740487109,
                  "end": 1489740487110
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "When navigate to Pantheon Edit Profile page from User Account page",
                "Then check general page elements for Pantheon Edit Profile page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 29353,
        "start": 1489740457837,
        "end": 1489740487190
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/RequestNewPassword.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Request New Password Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          }
        ],
        "name": "RequestNewPassword.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Request New Password Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          },
          "storyPath": "stories/site/pantheon/RequestNewPassword.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1489740487202,
                  "end": 1489740487204
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2226,
                  "start": 1489740487206,
                  "end": 1489740489432
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 864,
                  "start": 1489740489432,
                  "end": 1489740490296
                },
                {
                  "step": "When navigate to Pantheon Request New Password page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
                  "durationInMillis": 543,
                  "start": 1489740490297,
                  "end": 1489740490840
                },
                {
                  "step": "Then check general page elements for Pantheon Request New Password page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
                  "durationInMillis": 20349,
                  "start": 1489740490841,
                  "end": 1489740511190
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1489740511190,
                  "end": 1489740511220
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740511220,
                  "end": 1489740511220
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Request New Password page from LogIn page",
                "Then check general page elements for Pantheon Request New Password page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24096,
        "start": 1489740487200,
        "end": 1489740511296
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          }
        ],
        "name": "UserAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 2,
                  "start": 1489740511301,
                  "end": 1489740511303
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3997,
                  "start": 1489740511303,
                  "end": 1489740515300
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1151,
                  "start": 1489740515301,
                  "end": 1489740516452
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2554,
                  "start": 1489740516452,
                  "end": 1489740519006
                },
                {
                  "step": "Then check general page elements for Pantheon User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User Account page",
                  "durationInMillis": 20410,
                  "start": 1489740519007,
                  "end": 1489740539417
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489740539418,
                  "end": 1489740539442
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740539442,
                  "end": 1489740539443
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "Then check general page elements for Pantheon User Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 28213,
        "start": 1489740511300,
        "end": 1489740539513
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserApps.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "manage my Apps",
          "asA": "user of Ticket Master Developer portal",
          "iWantTo": "perform CRUD operations with my apps",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "And navigate to Pantheon LogIn page from Home page",
              "And navigate to Pantheon User Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          },
          {
            "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field Application name value uniqueApp",
              "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "And save changes on Edit App Page",
              "Then the message App Created! is displayed",
              "Then open my Apps page",
              "And the App is appeared in the list of apps"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          },
          {
            "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "When delete first App",
              "Then the message App Deleted! is displayed",
              "And the predefined app is removed from the list of apps"
            ]
          }
        ],
        "name": "UserApps.story"
      },
      "localizedNarrative": "In order to manage my Apps\nAs a user of Ticket Master Developer portal\nI want to perform CRUD operations with my apps",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2344,
                  "start": 1489740539516,
                  "end": 1489740541860
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 940,
                  "start": 1489740541861,
                  "end": 1489740542801
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2741,
                  "start": 1489740542802,
                  "end": 1489740545543
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740545543,
                  "end": 1489740545544
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When navigate to Pantheon Add New App page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Add New App page from User Account page",
                  "durationInMillis": 1427,
                  "start": 1489740545544,
                  "end": 1489740546971
                },
                {
                  "step": "Then check general page elements for Pantheon Add New App page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Add New App page",
                  "durationInMillis": 20357,
                  "start": 1489740546972,
                  "end": 1489740567329
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 59,
                  "start": 1489740567330,
                  "end": 1489740567389
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740567389,
                  "end": 1489740567390
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When navigate to Pantheon Add New App page from User Account page",
                "Then check general page elements for Pantheon Add New App page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "appName",
                  "mamaxF-Appd2"
                ],
                [
                  "message",
                  "Callback URL is required for Oauth Product"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4709,
                    "start": 1489740567474,
                    "end": 1489740572183
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 1626,
                    "start": 1489740572184,
                    "end": 1489740573810
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 3021,
                    "start": 1489740573812,
                    "end": 1489740576833
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given navigate to Pantheon Add New App page from User Account page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                    "durationInMillis": 1390,
                    "start": 1489740576835,
                    "end": 1489740578225
                  },
                  {
                    "step": "When enter to the field <appFormField> value <appName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When enter to the field ｟Application name｠ value ｟mamaxF-Appd2｠",
                    "durationInMillis": 247,
                    "start": 1489740578227,
                    "end": 1489740578474
                  },
                  {
                    "step": "When save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When save changes on Edit App Page",
                    "durationInMillis": 1940,
                    "start": 1489740578475,
                    "end": 1489740580415
                  },
                  {
                    "step": "Then the message <message> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                    "durationInMillis": 513,
                    "start": 1489740580416,
                    "end": 1489740580929
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appName",
                    "message"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appName",
                        "mamaxF-Appd2"
                      ],
                      [
                        "message",
                        "Callback URL is required for Oauth Product"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appName",
                        "https://ticketmaster.com"
                      ],
                      [
                        "message",
                        "Application name field is required."
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given navigate to Pantheon Add New App page from User Account page",
                  "When enter to the field <appFormField> value <appName>",
                  "When save changes on Edit App Page",
                  "Then the message <message> is displayed"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "appName",
                  "https://ticketmaster.com"
                ],
                [
                  "message",
                  "Application name field is required."
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4417,
                    "start": 1489740581023,
                    "end": 1489740585440
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 1512,
                    "start": 1489740585441,
                    "end": 1489740586953
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 3177,
                    "start": 1489740586954,
                    "end": 1489740590131
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given navigate to Pantheon Add New App page from User Account page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                    "durationInMillis": 1549,
                    "start": 1489740590132,
                    "end": 1489740591681
                  },
                  {
                    "step": "When enter to the field <appFormField> value <appName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://ticketmaster.com｠",
                    "durationInMillis": 314,
                    "start": 1489740591683,
                    "end": 1489740591997
                  },
                  {
                    "step": "When save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When save changes on Edit App Page",
                    "durationInMillis": 1677,
                    "start": 1489740591998,
                    "end": 1489740593675
                  },
                  {
                    "step": "Then the message <message> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                    "durationInMillis": 801,
                    "start": 1489740593676,
                    "end": 1489740594477
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appName",
                    "message"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appName",
                        "mamaxF-Appd2"
                      ],
                      [
                        "message",
                        "Callback URL is required for Oauth Product"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appName",
                        "https://ticketmaster.com"
                      ],
                      [
                        "message",
                        "Application name field is required."
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given navigate to Pantheon Add New App page from User Account page",
                  "When enter to the field <appFormField> value <appName>",
                  "When save changes on Edit App Page",
                  "Then the message <message> is displayed"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field Application name value uniqueApp",
              "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "And save changes on Edit App Page",
              "Then the message App Created! is displayed",
              "Then open my Apps page",
              "And the App is appeared in the list of apps"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3393,
                  "start": 1489740594566,
                  "end": 1489740597959
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 962,
                  "start": 1489740597960,
                  "end": 1489740598922
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2851,
                  "start": 1489740598923,
                  "end": 1489740601774
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740601774,
                  "end": 1489740601775
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given navigate to Pantheon Add New App page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                  "durationInMillis": 1046,
                  "start": 1489740601775,
                  "end": 1489740602821
                },
                {
                  "step": "When enter to the field Application name value uniqueApp",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter to the field ｟Application name｠ value ｟uniqueApp｠",
                  "durationInMillis": 204,
                  "start": 1489740602823,
                  "end": 1489740603027
                },
                {
                  "step": "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                  "durationInMillis": 172,
                  "start": 1489740603028,
                  "end": 1489740603200
                },
                {
                  "step": "And save changes on Edit App Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And save changes on Edit App Page",
                  "durationInMillis": 8292,
                  "start": 1489740603201,
                  "end": 1489740611493
                },
                {
                  "step": "Then the message App Created! is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟App Created!｠ is displayed",
                  "durationInMillis": 674,
                  "start": 1489740611493,
                  "end": 1489740612167
                },
                {
                  "step": "Then open my Apps page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then open my Apps page",
                  "durationInMillis": 166,
                  "start": 1489740612168,
                  "end": 1489740612334
                },
                {
                  "step": "And the App is appeared in the list of apps",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And the App is appeared in the list of apps",
                  "durationInMillis": 183,
                  "start": 1489740612334,
                  "end": 1489740612517
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32,
                  "start": 1489740612517,
                  "end": 1489740612549
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740612549,
                  "end": 1489740612549
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given navigate to Pantheon Add New App page from User Account page",
                "When enter to the field Application name value uniqueApp",
                "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
                "And save changes on Edit App Page",
                "Then the message App Created! is displayed",
                "Then open my Apps page",
                "And the App is appeared in the list of apps"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "formError",
                  "Application name field is required."
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 4505,
                    "start": 1489740612621,
                    "end": 1489740617126
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 981,
                    "start": 1489740617127,
                    "end": 1489740618108
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4502,
                    "start": 1489740618110,
                    "end": 1489740622612
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 231,
                    "start": 1489740622613,
                    "end": 1489740622844
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 400,
                    "start": 1489740622845,
                    "end": 1489740623245
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                    "durationInMillis": 3047,
                    "start": 1489740623246,
                    "end": 1489740626293
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 3168,
                    "start": 1489740626295,
                    "end": 1489740629463
                  },
                  {
                    "step": "Then the message <formError> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                    "durationInMillis": 644,
                    "start": 1489740629465,
                    "end": 1489740630109
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "formError"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "formError",
                        "Application name field is required."
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "formError",
                        "Callback URL is required for Oauth Product"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And save changes on Edit App Page",
                  "Then the message <formError> is displayed"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "formError",
                  "Callback URL is required for Oauth Product"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3698,
                    "start": 1489740630176,
                    "end": 1489740633874
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 1066,
                    "start": 1489740633875,
                    "end": 1489740634941
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 3683,
                    "start": 1489740634941,
                    "end": 1489740638624
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 387,
                    "start": 1489740638625,
                    "end": 1489740639012
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 323,
                    "start": 1489740639014,
                    "end": 1489740639337
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                    "durationInMillis": 2713,
                    "start": 1489740639338,
                    "end": 1489740642051
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 3497,
                    "start": 1489740642052,
                    "end": 1489740645549
                  },
                  {
                    "step": "Then the message <formError> is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                    "durationInMillis": 570,
                    "start": 1489740645550,
                    "end": 1489740646120
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "formError"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "formError",
                        "Application name field is required."
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "formError",
                        "Callback URL is required for Oauth Product"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And save changes on Edit App Page",
                  "Then the message <formError> is displayed"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "appFormField",
                  "Application name"
                ],
                [
                  "appValue",
                  "mamax-Appdf"
                ],
                [
                  "detailName",
                  "Application Name"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3714,
                    "start": 1489740646188,
                    "end": 1489740649902
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 870,
                    "start": 1489740649903,
                    "end": 1489740650773
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4068,
                    "start": 1489740650773,
                    "end": 1489740654841
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 245,
                    "start": 1489740654843,
                    "end": 1489740655088
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 285,
                    "start": 1489740655089,
                    "end": 1489740655374
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                    "durationInMillis": 3088,
                    "start": 1489740655375,
                    "end": 1489740658463
                  },
                  {
                    "step": "And enter to the field <appFormField> value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And enter to the field ｟Application name｠ value ｟mamax-Appdf｠",
                    "durationInMillis": 55,
                    "start": 1489740658464,
                    "end": 1489740658519
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 8111,
                    "start": 1489740658520,
                    "end": 1489740666631
                  },
                  {
                    "step": "And the message App Updated! is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                    "durationInMillis": 681,
                    "start": 1489740666632,
                    "end": 1489740667313
                  },
                  {
                    "step": "And open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open my Apps page",
                    "durationInMillis": 118,
                    "start": 1489740667314,
                    "end": 1489740667432
                  },
                  {
                    "step": "And open Details tab on the application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Details tab on the application",
                    "durationInMillis": 248,
                    "start": 1489740667433,
                    "end": 1489740667681
                  },
                  {
                    "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                      "cause": {
                        "@class": "org.junit.ComparisonFailure",
                        "detailMessage": "",
                        "stackTrace": [
                          "org.junit.Assert.assertEquals(Assert.java:115)",
                          "org.junit.Assert.assertEquals(Assert.java:144)",
                          "bla.tm.steps.pantheon.UserAppsSteps.checkIfChangesAreApplied(UserAppsSteps.java:51)",
                          "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.CGLIB$checkIfChangesAreApplied$8(<generated>)",
                          "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50$$FastClassByCGLIB$$12002a3a.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.checkIfChangesAreApplied(<generated>)",
                          "bla.tm.definitions.site.pantheon.UserAppsDefinition.changesHaveApplied(UserAppsDefinition.java:63)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "fExpected": "kggqhdie",
                        "fActual": "mamax-Appdf"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "1bbb5069-9583-4bfd-a9c5-e5ec7648d903"
                    },
                    "parametrisedStep": "Then ｟Application Name｠ have been applied on Edit App Page with value ｟mamax-Appdf｠",
                    "durationInMillis": 648,
                    "start": 1489740667682,
                    "end": 1489740668330
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appValue",
                    "detailName"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appValue",
                        "mamax-Appdf"
                      ],
                      [
                        "detailName",
                        "Application Name"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appValue",
                        "https://oauth.ticketmaster.com"
                      ],
                      [
                        "detailName",
                        "Callback URL"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And enter to the field <appFormField> value <appValue>",
                  "And save changes on Edit App Page",
                  "And the message App Updated! is displayed",
                  "And open my Apps page",
                  "And open Details tab on the application",
                  "Then <detailName> have been applied on Edit App Page with value <appValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "appFormField",
                  "Redirect URI"
                ],
                [
                  "appValue",
                  "https://oauth.ticketmaster.com"
                ],
                [
                  "detailName",
                  "Callback URL"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2310,
                    "start": 1489740668406,
                    "end": 1489740670716
                  },
                  {
                    "step": "And navigate to Pantheon LogIn page from Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                    "durationInMillis": 839,
                    "start": 1489740670717,
                    "end": 1489740671556
                  },
                  {
                    "step": "And navigate to Pantheon User Account page from LogIn page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                    "durationInMillis": 4228,
                    "start": 1489740671556,
                    "end": 1489740675784
                  }
                ]
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open my Apps page",
                    "durationInMillis": 134,
                    "start": 1489740675785,
                    "end": 1489740675919
                  },
                  {
                    "step": "And open Edit App Page for the first application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Edit App Page for the first application",
                    "durationInMillis": 262,
                    "start": 1489740675920,
                    "end": 1489740676182
                  },
                  {
                    "step": "When clear field <appFormField> on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                    "durationInMillis": 2781,
                    "start": 1489740676183,
                    "end": 1489740678964
                  },
                  {
                    "step": "And enter to the field <appFormField> value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                    "durationInMillis": 97,
                    "start": 1489740678965,
                    "end": 1489740679062
                  },
                  {
                    "step": "And save changes on Edit App Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And save changes on Edit App Page",
                    "durationInMillis": 8512,
                    "start": 1489740679062,
                    "end": 1489740687574
                  },
                  {
                    "step": "And the message App Updated! is displayed",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                    "durationInMillis": 658,
                    "start": 1489740687574,
                    "end": 1489740688232
                  },
                  {
                    "step": "And open my Apps page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open my Apps page",
                    "durationInMillis": 88,
                    "start": 1489740688233,
                    "end": 1489740688321
                  },
                  {
                    "step": "And open Details tab on the application",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And open Details tab on the application",
                    "durationInMillis": 160,
                    "start": 1489740688322,
                    "end": 1489740688482
                  },
                  {
                    "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then ｟Callback URL｠ have been applied on Edit App Page with value ｟https://oauth.ticketmaster.com｠",
                    "durationInMillis": 147,
                    "start": 1489740688483,
                    "end": 1489740688630
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "appFormField",
                    "appValue",
                    "detailName"
                  ],
                  "data": [
                    [
                      [
                        "appFormField",
                        "Application name"
                      ],
                      [
                        "appValue",
                        "mamax-Appdf"
                      ],
                      [
                        "detailName",
                        "Application Name"
                      ]
                    ],
                    [
                      [
                        "appFormField",
                        "Redirect URI"
                      ],
                      [
                        "appValue",
                        "https://oauth.ticketmaster.com"
                      ],
                      [
                        "detailName",
                        "Callback URL"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open my Apps page",
                  "And open Edit App Page for the first application",
                  "When clear field <appFormField> on Edit App Page",
                  "And enter to the field <appFormField> value <appValue>",
                  "And save changes on Edit App Page",
                  "And the message App Updated! is displayed",
                  "And open my Apps page",
                  "And open Details tab on the application",
                  "Then <detailName> have been applied on Edit App Page with value <appValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "When delete first App",
              "Then the message App Deleted! is displayed",
              "And the predefined app is removed from the list of apps"
            ]
          },
          "storyPath": "stories/site/pantheon/UserApps.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3809,
                  "start": 1489740688775,
                  "end": 1489740692584
                },
                {
                  "step": "And navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 808,
                  "start": 1489740692585,
                  "end": 1489740693393
                },
                {
                  "step": "And navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 4201,
                  "start": 1489740693394,
                  "end": 1489740697595
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740697596,
                  "end": 1489740697597
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open my Apps page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open my Apps page",
                  "durationInMillis": 213,
                  "start": 1489740697598,
                  "end": 1489740697811
                },
                {
                  "step": "When delete first App",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When delete first App",
                  "durationInMillis": 10936,
                  "start": 1489740697812,
                  "end": 1489740708748
                },
                {
                  "step": "Then the message App Deleted! is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟App Deleted!｠ is displayed",
                  "durationInMillis": 703,
                  "start": 1489740708749,
                  "end": 1489740709452
                },
                {
                  "step": "And the predefined app is removed from the list of apps",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "And the predefined app is removed from the list of apps",
                    "cause": {
                      "@class": "java.lang.AssertionError",
                      "stackTrace": [
                        "org.junit.Assert.fail(Assert.java:86)",
                        "org.junit.Assert.assertTrue(Assert.java:41)",
                        "org.junit.Assert.assertFalse(Assert.java:64)",
                        "org.junit.Assert.assertFalse(Assert.java:74)",
                        "bla.tm.steps.pantheon.UserAppsSteps.checkIsAppNotExists(UserAppsSteps.java:76)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.CGLIB$checkIsAppNotExists$12(<generated>)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50$$FastClassByCGLIB$$12002a3a.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.checkIsAppNotExists(<generated>)",
                        "bla.tm.definitions.site.pantheon.UserAppsDefinition.appIsRemovedFromTheListOfApps(UserAppsDefinition.java:84)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ]
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "f8bca9ee-a265-4da2-9729-63cdc7ec3954"
                  },
                  "parametrisedStep": "And the predefined app is removed from the list of apps",
                  "durationInMillis": 460,
                  "start": 1489740709453,
                  "end": 1489740709913
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 15,
                  "start": 1489740709915,
                  "end": 1489740709930
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740709930,
                  "end": 1489740709930
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open my Apps page",
                "When delete first App",
                "Then the message App Deleted! is displayed",
                "And the predefined app is removed from the list of apps"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 170492,
        "start": 1489740539516,
        "end": 1489740710008
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserLogIn.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User LonIn Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon User LogIn page"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon with invaliduserName and 1234567",
              "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
            ]
          },
          {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon using OpenID invalidOpenID",
              "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
            ]
          }
        ],
        "name": "UserLogIn.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User LonIn Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Then check general page elements for Pantheon User LogIn page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2421,
                  "start": 1489740710560,
                  "end": 1489740712981
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 958,
                  "start": 1489740712983,
                  "end": 1489740713941
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740713941,
                  "end": 1489740713942
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Then check general page elements for Pantheon User LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User LogIn page",
                  "durationInMillis": 20244,
                  "start": 1489740713943,
                  "end": 1489740734187
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489740734188,
                  "end": 1489740734210
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740734210,
                  "end": 1489740734210
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Then check general page elements for Pantheon User LogIn page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon with invaliduserName and 1234567",
              "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3480,
                  "start": 1489740734279,
                  "end": 1489740737759
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1113,
                  "start": 1489740737760,
                  "end": 1489740738873
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740738874,
                  "end": 1489740738874
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When login to Pantheon with invaliduserName and 1234567",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When login to Pantheon with ｟invaliduserName｠ and ｟1234567｠",
                  "durationInMillis": 705,
                  "start": 1489740738875,
                  "end": 1489740739580
                },
                {
                  "step": "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Sorry, unrecognized username or password. Have you forgotten your password?｠ is displayed",
                  "durationInMillis": 272,
                  "start": 1489740739581,
                  "end": 1489740739853
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 37,
                  "start": 1489740739854,
                  "end": 1489740739891
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740739891,
                  "end": 1489740739891
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When login to Pantheon with invaliduserName and 1234567",
                "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When login to Pantheon using OpenID invalidOpenID",
              "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 5273,
                  "start": 1489740739959,
                  "end": 1489740745232
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 872,
                  "start": 1489740745233,
                  "end": 1489740746105
                },
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740746106,
                  "end": 1489740746107
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "When login to Pantheon using OpenID invalidOpenID",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When login to Pantheon using OpenID ｟invalidOpenID｠",
                  "durationInMillis": 906,
                  "start": 1489740746107,
                  "end": 1489740747013
                },
                {
                  "step": "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the message ｟Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly.｠ is displayed",
                  "durationInMillis": 358,
                  "start": 1489740747013,
                  "end": 1489740747371
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29,
                  "start": 1489740747372,
                  "end": 1489740747401
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740747401,
                  "end": 1489740747402
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "When login to Pantheon using OpenID invalidOpenID",
                "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 36908,
        "start": 1489740710559,
        "end": 1489740747467
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Partners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/partners/Partners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740747470,
                  "end": 1489740747470
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partners page",
                  "durationInMillis": 2113,
                  "start": 1489740747470,
                  "end": 1489740749583
                },
                {
                  "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20288,
                  "start": 1489740749585,
                  "end": 1489740769873
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28,
                  "start": 1489740769873,
                  "end": 1489740769901
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740769901,
                  "end": 1489740769901
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partners page",
                "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 22495,
        "start": 1489740747469,
        "end": 1489740769964
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_CertifiedPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Certified Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_CertifiedPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Certified Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740769966,
                  "end": 1489740769967
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Certified Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Certified Partners page",
                  "durationInMillis": 2833,
                  "start": 1489740769967,
                  "end": 1489740772800
                },
                {
                  "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10290,
                  "start": 1489740772801,
                  "end": 1489740783091
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 44,
                  "start": 1489740783091,
                  "end": 1489740783135
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740783135,
                  "end": 1489740783136
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Certified Partners page",
                "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13236,
        "start": 1489740769966,
        "end": 1489740783202
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_DistributionPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Distribution Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_DistributionPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Distribution Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740783206,
                  "end": 1489740783207
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Distribution Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Distribution Partners page",
                  "durationInMillis": 3536,
                  "start": 1489740783207,
                  "end": 1489740786743
                },
                {
                  "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 602,
                  "start": 1489740786744,
                  "end": 1489740787346
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1489740787347,
                  "end": 1489740787382
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740787382,
                  "end": 1489740787382
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/distribution-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Distribution Partners page",
                "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4244,
        "start": 1489740783205,
        "end": 1489740787449
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_Nexus.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Join The Nexus Program Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_Nexus.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Join The Nexus Program Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_Nexus.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740787452,
                  "end": 1489740787453
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Join The Nexus Program page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Join The Nexus Program page",
                  "durationInMillis": 2044,
                  "start": 1489740787453,
                  "end": 1489740789497
                },
                {
                  "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 749,
                  "start": 1489740789498,
                  "end": 1489740790247
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 60,
                  "start": 1489740790247,
                  "end": 1489740790307
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740790307,
                  "end": 1489740790308
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Join The Nexus Program page",
                "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2987,
        "start": 1489740787452,
        "end": 1489740790439
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_StartupsDevelopers.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Startups and Developers Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_StartupsDevelopers.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Startups and Developers Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740790442,
                  "end": 1489740790442
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Startups and Developers page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Startups and Developers page",
                  "durationInMillis": 4776,
                  "start": 1489740790442,
                  "end": 1489740795218
                },
                {
                  "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 399,
                  "start": 1489740795219,
                  "end": 1489740795618
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 37,
                  "start": 1489740795619,
                  "end": 1489740795656
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740795657,
                  "end": 1489740795657
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/startups-and-developers/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Startups and Developers page",
                "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5281,
        "start": 1489740790441,
        "end": 1489740795722
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Products and Docs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "PD.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Products and Docs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740795727,
                  "end": 1489740795728
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Products and Docs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Products and Docs page",
                  "durationInMillis": 1964,
                  "start": 1489740795728,
                  "end": 1489740797692
                },
                {
                  "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40283,
                  "start": 1489740797693,
                  "end": 1489740837976
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489740837977,
                  "end": 1489740837998
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740837998,
                  "end": 1489740837998
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Products and Docs page",
                "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 42333,
        "start": 1489740795727,
        "end": 1489740838060
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740838062,
                  "end": 1489740838063
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 3553,
                  "start": 1489740838063,
                  "end": 1489740841616
                },
                {
                  "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 10847,
                  "start": 1489740841617,
                  "end": 1489740852464
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489740852465,
                  "end": 1489740852489
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740852489,
                  "end": 1489740852489
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 14490,
        "start": 1489740838062,
        "end": 1489740852552
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer_V2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page V2 of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/v2) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check general page elements for API Explorer V2 Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          {
            "title": "(/api-explorer/v2) Open Graph support [1.1.51 Verify tags are present in source code]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|tag            |\n|og:title       |\n|og:url         |\n|og:site_name   |\n|og:image       |\n|og:image:type  |\n|og:image:width |\n|og:image:height|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "tag"
              ],
              "data": [
                [
                  [
                    "tag",
                    "og:title"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:url"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:site_name"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:type"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:width"
                  ]
                ],
                [
                  [
                    "tag",
                    "og:image:height"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "Then check <tag> is present in the source code page"
            ]
          },
          {
            "title": "(/api-explorer/v2) [5.2.2 API Explorer V2 : The parameters section is opened]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Get Event Details         |\n|Get Event Images          |\n|Get Attraction Details    |\n|Get Classification Details|\n|Get Venue Details         |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Get Event Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Event Images"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Attraction Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Classification Details"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Get Venue Details"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the parameters section is opened",
              "And error notification is shown on required fields"
            ]
          },
          {
            "title": "(/api-explorer/v2) [5.2.3 API Explorer V2 : The request list contains url and block]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|apiGetMethod              |\n|Search Events             |\n|Search Attractions        |\n|Search Classifications    |\n|Search Venues             |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "apiGetMethod"
              ],
              "data": [
                [
                  [
                    "apiGetMethod",
                    "Search Events"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Search Attractions"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Search Classifications"
                  ]
                ],
                [
                  [
                    "apiGetMethod",
                    "Search Venues"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer V2 page",
              "When I choose <apiGetMethod> to send request",
              "And click GET button",
              "Then the request list contains url",
              "And the request list contains response block"
            ]
          }
        ],
        "name": "PD_APIExplorer_V2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page V2 of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_ChangeLog.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test ChangeLog Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_ChangeLog.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test ChangeLog Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740852554,
                  "end": 1489740852555
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open ChangeLog page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open ChangeLog page",
                  "durationInMillis": 1745,
                  "start": 1489740852555,
                  "end": 1489740854300
                },
                {
                  "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 256,
                  "start": 1489740854301,
                  "end": 1489740854557
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 472,
                  "start": 1489740854558,
                  "end": 1489740855030
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740855030,
                  "end": 1489740855031
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open ChangeLog page",
                "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2552,
        "start": 1489740852554,
        "end": 1489740855106
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_CommerceAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Commerce API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_CommerceAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Commerce API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740855108,
                  "end": 1489740855109
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 4195,
                  "start": 1489740855109,
                  "end": 1489740859304
                },
                {
                  "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 979,
                  "start": 1489740859305,
                  "end": 1489740860284
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489740860284,
                  "end": 1489740860318
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740860318,
                  "end": 1489740860318
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5283,
        "start": 1489740855108,
        "end": 1489740860391
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DealsAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Deals API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DealsAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Deals API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740860394,
                  "end": 1489740860394
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Deals API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Deals API page",
                  "durationInMillis": 3169,
                  "start": 1489740860394,
                  "end": 1489740863563
                },
                {
                  "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 457,
                  "start": 1489740863564,
                  "end": 1489740864021
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1489740864021,
                  "end": 1489740864046
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740864046,
                  "end": 1489740864046
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Deals API page",
                "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3717,
        "start": 1489740860393,
        "end": 1489740864110
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v1 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV1.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v1 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740864112,
                  "end": 1489740864112
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v1 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v1 page",
                  "durationInMillis": 4729,
                  "start": 1489740864112,
                  "end": 1489740868841
                },
                {
                  "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 686,
                  "start": 1489740868842,
                  "end": 1489740869528
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489740869529,
                  "end": 1489740869551
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489740869551,
                  "end": 1489740869551
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v1 page",
                "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5502,
        "start": 1489740864111,
        "end": 1489740869613
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v2 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v2 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740869615,
                  "end": 1489740869616
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v2 page",
                  "durationInMillis": 5593,
                  "start": 1489740869616,
                  "end": 1489740875209
                },
                {
                  "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1881,
                  "start": 1489740875210,
                  "end": 1489740877091
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 121,
                  "start": 1489740877092,
                  "end": 1489740877213
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740877213,
                  "end": 1489740877214
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v2 page",
                "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7664,
        "start": 1489740869615,
        "end": 1489740877279
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_GettingStarted.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Getting Started Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_GettingStarted.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Getting Started Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489740877282,
                  "end": 1489740877283
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 3303,
                  "start": 1489740877283,
                  "end": 1489740880586
                },
                {
                  "step": "When Commerce API menu has list of methods",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When Commerce API menu has list of methods",
                  "durationInMillis": 128021,
                  "start": 1489740880587,
                  "end": 1489741008608
                },
                {
                  "step": "And open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And open Getting Started page",
                  "durationInMillis": 591,
                  "start": 1489741008610,
                  "end": 1489741009201
                },
                {
                  "step": "Then all the Commerce API methods are shown on Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
                  "durationInMillis": 41204,
                  "start": 1489741009202,
                  "end": 1489741050406
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 849,
                  "start": 1489741050406,
                  "end": 1489741051255
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741051255,
                  "end": 1489741051255
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "When Commerce API menu has list of methods",
                "And open Getting Started page",
                "Then all the Commerce API methods are shown on Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741051367,
                  "end": 1489741051368
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 1828,
                  "start": 1489741051368,
                  "end": 1489741053196
                },
                {
                  "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1361,
                  "start": 1489741053197,
                  "end": 1489741054558
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 82,
                  "start": 1489741054558,
                  "end": 1489741054640
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741054640,
                  "end": 1489741054641
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 177427,
        "start": 1489740877282,
        "end": 1489741054709
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InteractiveAPIConsole.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Interactive API Console Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/interactive-console/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "Then check general page elements for Interactive API Console Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_InteractiveAPIConsole.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Interactive API Console Page of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test International Discovery API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InternationalDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test International Discovery API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741054711,
                  "end": 1489741054712
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open International Discovery API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open International Discovery API page",
                  "durationInMillis": 4179,
                  "start": 1489741054712,
                  "end": 1489741058891
                },
                {
                  "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1864,
                  "start": 1489741058891,
                  "end": 1489741060755
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 51,
                  "start": 1489741060755,
                  "end": 1489741060806
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741060806,
                  "end": 1489741060807
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open International Discovery API page",
                "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6159,
        "start": 1489741054711,
        "end": 1489741060870
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Inventory Status API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InventoryStatusAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Inventory Status API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741060872,
                  "end": 1489741060873
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Inventory Status API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Inventory Status API page",
                  "durationInMillis": 2448,
                  "start": 1489741060873,
                  "end": 1489741063321
                },
                {
                  "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 396,
                  "start": 1489741063322,
                  "end": 1489741063718
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 82,
                  "start": 1489741063718,
                  "end": 1489741063800
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741063801,
                  "end": 1489741063801
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Inventory Status API page",
                "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2995,
        "start": 1489741060872,
        "end": 1489741063867
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_OauthAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Oauth API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_OauthAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Oauth API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741063870,
                  "end": 1489741063870
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Oauth API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Oauth API page",
                  "durationInMillis": 3460,
                  "start": 1489741063870,
                  "end": 1489741067330
                },
                {
                  "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 207,
                  "start": 1489741067331,
                  "end": 1489741067538
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489741067539,
                  "end": 1489741067560
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741067560,
                  "end": 1489741067561
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Oauth API page",
                "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3753,
        "start": 1489741063869,
        "end": 1489741067622
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PartnerAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PartnerAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741067624,
                  "end": 1489741067625
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API page",
                  "durationInMillis": 3490,
                  "start": 1489741067625,
                  "end": 1489741071115
                },
                {
                  "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 742,
                  "start": 1489741071116,
                  "end": 1489741071858
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489741071859,
                  "end": 1489741071880
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741071880,
                  "end": 1489741071881
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API page",
                "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4320,
        "start": 1489741067624,
        "end": 1489741071944
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PublishAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Publish API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PublishAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Publish API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741071949,
                  "end": 1489741071949
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Publish API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Publish API page",
                  "durationInMillis": 3433,
                  "start": 1489741071949,
                  "end": 1489741075382
                },
                {
                  "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 503,
                  "start": 1489741075383,
                  "end": 1489741075886
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489741075887,
                  "end": 1489741075921
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741075921,
                  "end": 1489741075921
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Publish API page",
                "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4051,
        "start": 1489741071948,
        "end": 1489741075999
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SDKs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test SDK-s Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_SDKs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test SDK-s Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741076002,
                  "end": 1489741076002
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open SDKs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open SDKs page",
                  "durationInMillis": 2547,
                  "start": 1489741076002,
                  "end": 1489741078549
                },
                {
                  "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 606,
                  "start": 1489741078550,
                  "end": 1489741079156
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1489741079156,
                  "end": 1489741079194
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741079194,
                  "end": 1489741079195
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/sdks/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open SDKs page",
                "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Java Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-java"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3176,
                    "start": 1489741079263,
                    "end": 1489741082439
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                    "durationInMillis": 1220,
                    "start": 1489741082440,
                    "end": 1489741083660
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1128,
                    "start": 1489741083661,
                    "end": 1489741084789
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-JavaScript Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-javascript"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 2693,
                    "start": 1489741084851,
                    "end": 1489741087544
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                    "durationInMillis": 1000,
                    "start": 1489741087545,
                    "end": 1489741088545
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 779,
                    "start": 1489741088546,
                    "end": 1489741089325
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Scala Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-scala"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 3297,
                    "start": 1489741089388,
                    "end": 1489741092685
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                    "durationInMillis": 1042,
                    "start": 1489741092687,
                    "end": 1489741093729
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1138,
                    "start": 1489741093730,
                    "end": 1489741094868
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 18937,
        "start": 1489741076001,
        "end": 1489741094938
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Season Ticketing API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_SeasonTicketingAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Season Ticketing API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741094942,
                  "end": 1489741094943
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Season Ticketing API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Season Ticketing API page",
                  "durationInMillis": 1928,
                  "start": 1489741094943,
                  "end": 1489741096871
                },
                {
                  "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 937,
                  "start": 1489741096872,
                  "end": 1489741097809
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489741097810,
                  "end": 1489741097831
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741097831,
                  "end": 1489741097831
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Season Ticketing API page",
                "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2965,
        "start": 1489741094941,
        "end": 1489741097906
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_TopPicksAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Top Picks API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_TopPicksAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Top Picks API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741097909,
                  "end": 1489741097910
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Top Picks API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Top Picks API page",
                  "durationInMillis": 1996,
                  "start": 1489741097910,
                  "end": 1489741099906
                },
                {
                  "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 639,
                  "start": 1489741099907,
                  "end": 1489741100546
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489741100547,
                  "end": 1489741100571
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741100571,
                  "end": 1489741100572
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Top Picks API page",
                "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2774,
        "start": 1489741097908,
        "end": 1489741100682
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741100685,
                  "end": 1489741100685
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials page",
                  "durationInMillis": 1718,
                  "start": 1489741100685,
                  "end": 1489741102403
                },
                {
                  "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10179,
                  "start": 1489741102404,
                  "end": 1489741112583
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741112584,
                  "end": 1489741112607
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741112607,
                  "end": 1489741112608
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials page",
                "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 4485,
                    "start": 1489741112671,
                    "end": 1489741117156
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                    "durationInMillis": 3860,
                    "start": 1489741117157,
                    "end": 1489741121017
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 66,
                    "start": 1489741121017,
                    "end": 1489741121083
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1922,
                    "start": 1489741121147,
                    "end": 1489741123069
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 2108,
                    "start": 1489741123070,
                    "end": 1489741125178
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 103,
                    "start": 1489741125180,
                    "end": 1489741125283
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2447,
                    "start": 1489741125350,
                    "end": 1489741127797
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 1742,
                    "start": 1489741127798,
                    "end": 1489741129540
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 175,
                    "start": 1489741129541,
                    "end": 1489741129716
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1770,
                    "start": 1489741129839,
                    "end": 1489741131609
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                    "durationInMillis": 3339,
                    "start": 1489741131610,
                    "end": 1489741134949
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 291,
                    "start": 1489741134950,
                    "end": 1489741135241
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1831,
                    "start": 1489741135304,
                    "end": 1489741137135
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 1767,
                    "start": 1489741137136,
                    "end": 1489741138903
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 177,
                    "start": 1489741138904,
                    "end": 1489741139081
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1726,
                    "start": 1489741139155,
                    "end": 1489741140881
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 1733,
                    "start": 1489741140882,
                    "end": 1489741142615
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 243,
                    "start": 1489741142616,
                    "end": 1489741142859
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2374,
                    "start": 1489741142937,
                    "end": 1489741145311
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                    "durationInMillis": 1603,
                    "start": 1489741145312,
                    "end": 1489741146915
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 303,
                    "start": 1489741146915,
                    "end": 1489741147218
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1919,
                    "start": 1489741147282,
                    "end": 1489741149201
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 3574,
                    "start": 1489741149202,
                    "end": 1489741152776
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 41,
                    "start": 1489741152777,
                    "end": 1489741152818
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2590,
                    "start": 1489741152879,
                    "end": 1489741155469
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 3348,
                    "start": 1489741155471,
                    "end": 1489741158819
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 61,
                    "start": 1489741158820,
                    "end": 1489741158881
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 58263,
        "start": 1489741100684,
        "end": 1489741158947
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741158950,
                  "end": 1489741158951
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch page",
                  "durationInMillis": 2772,
                  "start": 1489741158951,
                  "end": 1489741161723
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10176,
                  "start": 1489741161724,
                  "end": 1489741171900
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741171901,
                  "end": 1489741171924
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741171924,
                  "end": 1489741171925
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch page",
                "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1714,
                    "start": 1489741171988,
                    "end": 1489741173702
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2624,
                    "start": 1489741173703,
                    "end": 1489741176327
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 57,
                    "start": 1489741176328,
                    "end": 1489741176385
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1858,
                    "start": 1489741176452,
                    "end": 1489741178310
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1670,
                    "start": 1489741178310,
                    "end": 1489741179980
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 131,
                    "start": 1489741179981,
                    "end": 1489741180112
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1694,
                    "start": 1489741180174,
                    "end": 1489741181868
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1527,
                    "start": 1489741181869,
                    "end": 1489741183396
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 602,
                    "start": 1489741183396,
                    "end": 1489741183998
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2881,
                    "start": 1489741184076,
                    "end": 1489741186957
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1775,
                    "start": 1489741186958,
                    "end": 1489741188733
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 132,
                    "start": 1489741188735,
                    "end": 1489741188867
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1666,
                    "start": 1489741188988,
                    "end": 1489741190654
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1791,
                    "start": 1489741190655,
                    "end": 1489741192446
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 245,
                    "start": 1489741192446,
                    "end": 1489741192691
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 2967,
                    "start": 1489741192801,
                    "end": 1489741195768
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2797,
                    "start": 1489741195769,
                    "end": 1489741198566
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 82,
                    "start": 1489741198567,
                    "end": 1489741198649
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 39764,
        "start": 1489741158949,
        "end": 1489741198713
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventInSomeLocation.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741198716,
                  "end": 1489741198717
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "durationInMillis": 4505,
                  "start": 1489741198717,
                  "end": 1489741203222
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 203,
                  "start": 1489741203223,
                  "end": 1489741203426
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1489741203426,
                  "end": 1489741203444
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741203444,
                  "end": 1489741203445
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4791,
        "start": 1489741198715,
        "end": 1489741203506
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741203508,
                  "end": 1489741203509
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "durationInMillis": 4595,
                  "start": 1489741203509,
                  "end": 1489741208104
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 630,
                  "start": 1489741208105,
                  "end": 1489741208735
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741208735,
                  "end": 1489741208758
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741208758,
                  "end": 1489741208758
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5312,
        "start": 1489741203508,
        "end": 1489741208820
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741208823,
                  "end": 1489741208823
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2237,
                  "start": 1489741208824,
                  "end": 1489741211061
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10259,
                  "start": 1489741211062,
                  "end": 1489741221321
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741221321,
                  "end": 1489741221344
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741221344,
                  "end": 1489741221344
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1807,
                    "start": 1489741221407,
                    "end": 1489741223214
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                    "durationInMillis": 1319,
                    "start": 1489741223215,
                    "end": 1489741224534
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 123,
                    "start": 1489741224535,
                    "end": 1489741224658
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1652,
                    "start": 1489741224720,
                    "end": 1489741226372
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1213,
                    "start": 1489741226373,
                    "end": 1489741227586
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 101,
                    "start": 1489741227587,
                    "end": 1489741227688
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1768,
                    "start": 1489741227752,
                    "end": 1489741229520
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1246,
                    "start": 1489741229520,
                    "end": 1489741230766
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 217,
                    "start": 1489741230766,
                    "end": 1489741230983
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 22240,
        "start": 1489741208822,
        "end": 1489741231062
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets_EventDiscoveryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741231064,
                  "end": 1489741231065
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "durationInMillis": 2394,
                  "start": 1489741231065,
                  "end": 1489741233459
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 371,
                  "start": 1489741233459,
                  "end": 1489741233830
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489741233831,
                  "end": 1489741233853
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741233853,
                  "end": 1489741233854
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets EventDiscoveryWidget page",
                "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2851,
        "start": 1489741231064,
        "end": 1489741233915
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Calendar.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Calendar Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Calendar.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Calendar Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741233917,
                  "end": 1489741233918
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3902,
                  "start": 1489741233918,
                  "end": 1489741237820
                },
                {
                  "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 221,
                  "start": 1489741237820,
                  "end": 1489741238041
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20,
                  "start": 1489741238041,
                  "end": 1489741238061
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741238061,
                  "end": 1489741238062
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4208,
        "start": 1489741233917,
        "end": 1489741238125
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Countdown.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Countdown Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Countdown.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Countdown Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741238127,
                  "end": 1489741238127
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3135,
                  "start": 1489741238127,
                  "end": 1489741241262
                },
                {
                  "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 449,
                  "start": 1489741241262,
                  "end": 1489741241711
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 41,
                  "start": 1489741241712,
                  "end": 1489741241753
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741241754,
                  "end": 1489741241754
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3695,
        "start": 1489741238126,
        "end": 1489741241821
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Event Discovery Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_EventDiscovery.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Event Discovery Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741241823,
                  "end": 1489741241824
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6865,
                  "start": 1489741241824,
                  "end": 1489741248689
                },
                {
                  "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 611,
                  "start": 1489741248690,
                  "end": 1489741249301
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1489741249302,
                  "end": 1489741249328
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741249328,
                  "end": 1489741249329
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 7572,
        "start": 1489741241823,
        "end": 1489741249395
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Universal Checkout Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_UniversalCheckout.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Universal Checkout Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741249398,
                  "end": 1489741249398
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Universal Checkout page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Universal Checkout page",
                  "durationInMillis": 3379,
                  "start": 1489741249399,
                  "end": 1489741252778
                },
                {
                  "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 607,
                  "start": 1489741252779,
                  "end": 1489741253386
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 71,
                  "start": 1489741253387,
                  "end": 1489741253458
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741253458,
                  "end": 1489741253459
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Universal Checkout page",
                "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4125,
        "start": 1489741249397,
        "end": 1489741253522
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_WordPress.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test WordPress Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_WordPress.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test WordPress Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741253525,
                  "end": 1489741253525
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open WordPress Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open WordPress Widget page",
                  "durationInMillis": 2907,
                  "start": 1489741253525,
                  "end": 1489741256432
                },
                {
                  "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 646,
                  "start": 1489741256432,
                  "end": 1489741257078
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489741257078,
                  "end": 1489741257112
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741257112,
                  "end": 1489741257112
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open WordPress Widget page",
                "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3650,
        "start": 1489741253524,
        "end": 1489741257174
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741257176,
                  "end": 1489741257177
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1861,
                  "start": 1489741257177,
                  "end": 1489741259038
                },
                {
                  "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10172,
                  "start": 1489741259039,
                  "end": 1489741269211
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489741269211,
                  "end": 1489741269233
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741269233,
                  "end": 1489741269234
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741269295,
                  "end": 1489741269296
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1931,
                  "start": 1489741269296,
                  "end": 1489741271227
                },
                {
                  "step": "When check visibility and click DirectPaymentButton element of Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
                  "durationInMillis": 782,
                  "start": 1489741271228,
                  "end": 1489741272010
                },
                {
                  "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "durationInMillis": 1036,
                  "start": 1489741272011,
                  "end": 1489741273047
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489741273047,
                  "end": 1489741273068
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741273068,
                  "end": 1489741273068
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "When check visibility and click DirectPaymentButton element of Widgets page",
                "Then check that new page opened from Direct Payment Button has has appropriate url"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Checkout Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/checkout/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2017,
                    "start": 1489741273140,
                    "end": 1489741275157
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                    "durationInMillis": 2004,
                    "start": 1489741275158,
                    "end": 1489741277162
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                    "durationInMillis": 567,
                    "start": 1489741277162,
                    "end": 1489741277729
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/event-discovery/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 3213,
                    "start": 1489741277926,
                    "end": 1489741281139
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                    "durationInMillis": 5127,
                    "start": 1489741281139,
                    "end": 1489741286266
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                    "durationInMillis": 49,
                    "start": 1489741286267,
                    "end": 1489741286316
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Countdown Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/countdown/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 4930,
                    "start": 1489741286384,
                    "end": 1489741291314
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                    "durationInMillis": 1768,
                    "start": 1489741291315,
                    "end": 1489741293083
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                    "durationInMillis": 721,
                    "start": 1489741293086,
                    "end": 1489741293807
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Calendar Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/calendar/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2368,
                    "start": 1489741293880,
                    "end": 1489741296248
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                    "durationInMillis": 3180,
                    "start": 1489741296249,
                    "end": 1489741299429
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                    "durationInMillis": 97,
                    "start": 1489741299430,
                    "end": 1489741299527
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "WordPress Widget Learn Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/wordpress/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2069,
                    "start": 1489741299590,
                    "end": 1489741301659
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                    "durationInMillis": 1379,
                    "start": 1489741301660,
                    "end": 1489741303039
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                    "durationInMillis": 512,
                    "start": 1489741303039,
                    "end": 1489741303551
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 46487,
        "start": 1489741257176,
        "end": 1489741303663
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Support Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Support Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741303666,
                  "end": 1489741303666
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Support page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Support page",
                  "durationInMillis": 3580,
                  "start": 1489741303666,
                  "end": 1489741307246
                },
                {
                  "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 784,
                  "start": 1489741307247,
                  "end": 1489741308031
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 96,
                  "start": 1489741308031,
                  "end": 1489741308127
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741308127,
                  "end": 1489741308128
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Support page",
                "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4529,
        "start": 1489741303665,
        "end": 1489741308194
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_BrandingGuide.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Branding Guide Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_BrandingGuide.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Branding Guide Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_BrandingGuide.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741308196,
                  "end": 1489741308197
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Branding Guide page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Branding Guide page",
                  "durationInMillis": 2785,
                  "start": 1489741308197,
                  "end": 1489741310982
                },
                {
                  "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 409,
                  "start": 1489741310983,
                  "end": 1489741311392
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 139,
                  "start": 1489741311392,
                  "end": 1489741311531
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741311531,
                  "end": 1489741311531
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/branding-guide/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Branding Guide page",
                "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3404,
        "start": 1489741308196,
        "end": 1489741311600
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_ContactUs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Contact Us Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_ContactUs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Contact Us Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_ContactUs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741311603,
                  "end": 1489741311604
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Contact Us page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Contact Us page",
                  "durationInMillis": 2245,
                  "start": 1489741311604,
                  "end": 1489741313849
                },
                {
                  "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10229,
                  "start": 1489741313850,
                  "end": 1489741324079
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1489741324079,
                  "end": 1489741324109
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741324109,
                  "end": 1489741324110
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/contact-us/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Contact Us page",
                "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12573,
        "start": 1489741311603,
        "end": 1489741324176
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_FAQ.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test FAQ Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_FAQ.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test FAQ Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_FAQ.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741324179,
                  "end": 1489741324179
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open FAQ page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open FAQ page",
                  "durationInMillis": 4372,
                  "start": 1489741324179,
                  "end": 1489741328551
                },
                {
                  "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 340,
                  "start": 1489741328552,
                  "end": 1489741328892
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30,
                  "start": 1489741328892,
                  "end": 1489741328922
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741328922,
                  "end": 1489741328923
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/faq/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open FAQ page",
                "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4808,
        "start": 1489741324178,
        "end": 1489741328986
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_GeneralTermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test General Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_GeneralTermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test General Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741328990,
                  "end": 1489741328990
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open General Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open General Terms Of Use page",
                  "durationInMillis": 4234,
                  "start": 1489741328991,
                  "end": 1489741333225
                },
                {
                  "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 481,
                  "start": 1489741333226,
                  "end": 1489741333707
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1489741333708,
                  "end": 1489741333746
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741333746,
                  "end": 1489741333747
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open General Terms Of Use page",
                "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4821,
        "start": 1489741328989,
        "end": 1489741333810
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_PartnerAPITermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_PartnerAPITermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741333812,
                  "end": 1489741333813
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API Terms Of Use page",
                  "durationInMillis": 3098,
                  "start": 1489741333813,
                  "end": 1489741336911
                },
                {
                  "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 534,
                  "start": 1489741336911,
                  "end": 1489741337445
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 42,
                  "start": 1489741337445,
                  "end": 1489741337487
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741337487,
                  "end": 1489741337488
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API Terms Of Use page",
                "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3749,
        "start": 1489741333812,
        "end": 1489741337561
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementNegative.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Commerce API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When User is logged to site (Commerce API)",
              "Then check that API key is provided for all placeholders on Commerce API page"
            ]
          },
          {
            "title": "(APi Key - Top Picks API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "When User is logged to site (Top Picks API)",
              "Then check that API key is provided for all placeholders on Top Picks API page"
            ]
          },
          {
            "title": "(APi Key - Season Ticketing API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "When User is logged to site (Season Ticketing API)",
              "Then check that API key is provided for all placeholders on Season Ticketing API page"
            ]
          },
          {
            "title": "(APi Key - International Discovery API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "When User is logged to site (International Discovery API)",
              "Then check that API key is provided for all placeholders on International Discovery API page"
            ]
          },
          {
            "title": "(APi Key - Publish API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "When User is logged to site (Publish API)",
              "Then check that API key is provided for all placeholders on Publish API page"
            ]
          },
          {
            "title": "(APi Key - Deals API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "When User is logged to site (Deals API)",
              "Then check that API key is provided for all placeholders on Deals API page"
            ]
          },
          {
            "title": "(APi Key - Partner API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "When User is logged to site (Partner API)",
              "Then check that API key is provided for all placeholders on Partner API page"
            ]
          },
          {
            "title": "(APi Key - Inventory Status API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "When User is logged to site (Inventory Status API)",
              "Then check that API key is provided for all placeholder on Inventory Status API page"
            ]
          }
        ],
        "name": "APIKeyReplacementNegative.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementPositive.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is not logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is not logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is not logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is not logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is not logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is not logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is not logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          }
        ],
        "name": "APIKeyReplacementPositive.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0,
        "start": 0,
        "end": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CalendarWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Calendar Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,postalCodeApi",
              "And store values of: apiKey,keyword,postalCodeApi",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button",
              "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CalendarWidget.story"
      },
      "localizedNarrative": "In order to setup Calendar Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741337564,
                  "end": 1489741337565
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3724,
                  "start": 1489741337565,
                  "end": 1489741341289
                },
                {
                  "step": "Then the required fields are not empty on the Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
                  "durationInMillis": 298,
                  "start": 1489741341289,
                  "end": 1489741341587
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 57,
                  "start": 1489741341587,
                  "end": 1489741341644
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741341644,
                  "end": 1489741341644
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then the required fields are not empty on the Calendar Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,postalCodeApi",
              "And store values of: apiKey,keyword,postalCodeApi",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741341716,
                  "end": 1489741341717
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3669,
                  "start": 1489741341717,
                  "end": 1489741345386
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 2307,
                  "start": 1489741345387,
                  "end": 1489741347694
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 169,
                  "start": 1489741347695,
                  "end": 1489741347864
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 783,
                  "start": 1489741347865,
                  "end": 1489741348648
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1730,
                  "start": 1489741348648,
                  "end": 1489741350378
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 192,
                  "start": 1489741350379,
                  "end": 1489741350571
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741350571,
                  "end": 1489741350594
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741350594,
                  "end": 1489741350595
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And change values for: apiKey,keyword,postalCodeApi",
                "And store values of: apiKey,keyword,postalCodeApi",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button",
              "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741350660,
                  "end": 1489741350661
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3103,
                  "start": 1489741350661,
                  "end": 1489741353764
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 450,
                  "start": 1489741353765,
                  "end": 1489741354215
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 2077,
                  "start": 1489741354216,
                  "end": 1489741356293
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2738,
                  "start": 1489741356294,
                  "end": 1489741359032
                },
                {
                  "step": "Then values of fields: apiKey,keyword,postalCodeApi equals stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values of fields: ｟apiKey,keyword,postalCodeApi｠ equals stored values",
                  "durationInMillis": 138,
                  "start": 1489741359033,
                  "end": 1489741359171
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741359171,
                  "end": 1489741359194
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 7,
                  "start": 1489741359194,
                  "end": 1489741359201
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,postalCodeApi",
                "And change values for: apiKey,keyword,postalCodeApi",
                "When click reset button",
                "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,postalCodeApi",
              "And change values for: apiKey,keyword,postalCodeApi",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741359271,
                  "end": 1489741359272
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3669,
                  "start": 1489741359272,
                  "end": 1489741362941
                },
                {
                  "step": "And store values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 310,
                  "start": 1489741362941,
                  "end": 1489741363251
                },
                {
                  "step": "And change values for: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 2011,
                  "start": 1489741363251,
                  "end": 1489741365262
                },
                {
                  "step": "When click reset button on Calendar Widget Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button on Calendar Widget Page",
                  "durationInMillis": 587,
                  "start": 1489741365263,
                  "end": 1489741365850
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 749,
                  "start": 1489741365851,
                  "end": 1489741366600
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1398,
                  "start": 1489741366601,
                  "end": 1489741367999
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
                  "durationInMillis": 374,
                  "start": 1489741367999,
                  "end": 1489741368373
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489741368373,
                  "end": 1489741368407
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741368407,
                  "end": 1489741368407
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,postalCodeApi",
                "And change values for: apiKey,keyword,postalCodeApi",
                "When click reset button on Calendar Widget Page",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741368473,
                  "end": 1489741368474
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4397,
                  "start": 1489741368474,
                  "end": 1489741372871
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 307,
                  "start": 1489741372872,
                  "end": 1489741373179
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 871,
                  "start": 1489741373179,
                  "end": 1489741374050
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489741374050,
                  "end": 1489741374074
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741374074,
                  "end": 1489741374075
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741374140,
                  "end": 1489741374141
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 3551,
                  "start": 1489741374141,
                  "end": 1489741377692
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 448,
                  "start": 1489741377693,
                  "end": 1489741378141
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 1636,
                  "start": 1489741378141,
                  "end": 1489741379777
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38,
                  "start": 1489741379778,
                  "end": 1489741379816
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741379816,
                  "end": 1489741379816
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 42319,
        "start": 1489741337564,
        "end": 1489741379883
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CountdownWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Countdown Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When get eventId by keyword ZZ TOP",
              "And set first eventId from list",
              "Then the event poster contains ZZ TOP"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CountdownWidget.story"
      },
      "localizedNarrative": "In order to setup Countdown Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741379886,
                  "end": 1489741379886
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2700,
                  "start": 1489741379886,
                  "end": 1489741382586
                },
                {
                  "step": "Then the required fields are not empty on the Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
                  "durationInMillis": 251,
                  "start": 1489741382587,
                  "end": 1489741382838
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 71,
                  "start": 1489741382839,
                  "end": 1489741382910
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741382910,
                  "end": 1489741382910
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then the required fields are not empty on the Countdown Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741382975,
                  "end": 1489741382976
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2514,
                  "start": 1489741382976,
                  "end": 1489741385490
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 197,
                  "start": 1489741385491,
                  "end": 1489741385688
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 896,
                  "start": 1489741385688,
                  "end": 1489741386584
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1389,
                  "start": 1489741386584,
                  "end": 1489741387973
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 128,
                  "start": 1489741387974,
                  "end": 1489741388102
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489741388102,
                  "end": 1489741388126
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741388126,
                  "end": 1489741388126
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741388192,
                  "end": 1489741388192
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2128,
                  "start": 1489741388193,
                  "end": 1489741390321
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 1127,
                  "start": 1489741390322,
                  "end": 1489741391449
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 154,
                  "start": 1489741391450,
                  "end": 1489741391604
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 740,
                  "start": 1489741391605,
                  "end": 1489741392345
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1331,
                  "start": 1489741392346,
                  "end": 1489741393677
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 109,
                  "start": 1489741393678,
                  "end": 1489741393787
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18,
                  "start": 1489741393788,
                  "end": 1489741393806
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741393806,
                  "end": 1489741393806
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741393869,
                  "end": 1489741393869
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2062,
                  "start": 1489741393869,
                  "end": 1489741395931
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 715,
                  "start": 1489741395932,
                  "end": 1489741396647
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 589,
                  "start": 1489741396648,
                  "end": 1489741397237
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 74,
                  "start": 1489741397238,
                  "end": 1489741397312
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 2730,
                  "start": 1489741397312,
                  "end": 1489741400042
                },
                {
                  "step": "Then the ApiKey and EventId fields have stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
                  "durationInMillis": 73,
                  "start": 1489741400043,
                  "end": 1489741400116
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489741400116,
                  "end": 1489741400138
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741400138,
                  "end": 1489741400138
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "Then the ApiKey and EventId fields have stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741400201,
                  "end": 1489741400202
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2549,
                  "start": 1489741400202,
                  "end": 1489741402751
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 219,
                  "start": 1489741402752,
                  "end": 1489741402971
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 505,
                  "start": 1489741402972,
                  "end": 1489741403477
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 91,
                  "start": 1489741403477,
                  "end": 1489741403568
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 2762,
                  "start": 1489741403569,
                  "end": 1489741406331
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 694,
                  "start": 1489741406332,
                  "end": 1489741407026
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1986,
                  "start": 1489741407027,
                  "end": 1489741409013
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 112,
                  "start": 1489741409014,
                  "end": 1489741409126
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21,
                  "start": 1489741409126,
                  "end": 1489741409147
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741409147,
                  "end": 1489741409148
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When get eventId by keyword ZZ TOP",
              "And set first eventId from list",
              "Then the event poster contains ZZ TOP"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741409210,
                  "end": 1489741409210
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3175,
                  "start": 1489741409210,
                  "end": 1489741412385
                },
                {
                  "step": "When get eventId by keyword ZZ TOP",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When get eventId by keyword ｟ZZ TOP｠",
                  "durationInMillis": 1196,
                  "start": 1489741412387,
                  "end": 1489741413583
                },
                {
                  "step": "And set first eventId from list",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set first eventId from list",
                  "durationInMillis": 2675,
                  "start": 1489741413583,
                  "end": 1489741416258
                },
                {
                  "step": "Then the event poster contains ZZ TOP",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event poster contains ｟ZZ TOP｠",
                  "durationInMillis": 233,
                  "start": 1489741416258,
                  "end": 1489741416491
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25,
                  "start": 1489741416491,
                  "end": 1489741416516
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741416516,
                  "end": 1489741416516
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When get eventId by keyword ZZ TOP",
                "And set first eventId from list",
                "Then the event poster contains ZZ TOP"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741416583,
                  "end": 1489741416584
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2868,
                  "start": 1489741416584,
                  "end": 1489741419452
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 299,
                  "start": 1489741419453,
                  "end": 1489741419752
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 613,
                  "start": 1489741419753,
                  "end": 1489741420366
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 140,
                  "start": 1489741420367,
                  "end": 1489741420507
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741420507,
                  "end": 1489741420508
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741420575,
                  "end": 1489741420575
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3223,
                  "start": 1489741420575,
                  "end": 1489741423798
                },
                {
                  "step": "And switch to VISUAL Tab",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And switch to VISUAL Tab",
                  "durationInMillis": 779,
                  "start": 1489741423799,
                  "end": 1489741424578
                },
                {
                  "step": "And set theme to full-width",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "And set theme to full-width",
                    "cause": {
                      "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                      "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                      "cause": {
                        "@class": "org.openqa.selenium.NoSuchElementException",
                        "@defined-in": "java.lang.Throwable",
                        "detailMessage": "Timed out after 5 seconds. Element not found",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setFullWidthMode(CountdownWidgetImpl.java:162)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setFullWidthMode(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setFullWidth(PD_Widget_CountdownSteps.java:169)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setFullWidth$18(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "extraInfo": [
                          [
                            "Driver info",
                            "driver.version: unknown"
                          ]
                        ]
                      },
                      "stackTrace": [
                        "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setFullWidthMode(CountdownWidgetImpl.java:162)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setFullWidthMode(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setFullWidth(PD_Widget_CountdownSteps.java:169)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setFullWidth$18(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "c5fba93f-8b12-4338-a973-7ef2e8140806"
                  },
                  "parametrisedStep": "And set theme to full-width",
                  "durationInMillis": 10965,
                  "start": 1489741424579,
                  "end": 1489741435544
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "And embedded html code contains stored theme",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "And embedded html code contains stored theme",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 4,
                  "start": 1489741435548,
                  "end": 1489741435552
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741435552,
                  "end": 1489741435552
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And switch to VISUAL Tab",
                "And set theme to full-width",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored theme"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2408,
                    "start": 1489741435847,
                    "end": 1489741438255
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1048,
                    "start": 1489741438256,
                    "end": 1489741439304
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "And set theme to poster",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "cause": {
                          "@class": "org.openqa.selenium.NoSuchElementException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Timed out after 5 seconds. Element not found",
                          "stackTrace": [
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                            "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                            "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy29.click(Unknown Source)",
                            "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                            "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "driver.version: unknown"
                            ]
                          ]
                        },
                        "stackTrace": [],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "bec88de6-6a1d-4271-98d6-ec1674c3e522"
                    },
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 11087,
                    "start": 1489741439304,
                    "end": 1489741450391
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 3840,
                    "start": 1489741450458,
                    "end": 1489741454298
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 798,
                    "start": 1489741454299,
                    "end": 1489741455097
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "And set theme to poster",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "cause": {
                          "@class": "org.openqa.selenium.NoSuchElementException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Timed out after 5 seconds. Element not found",
                          "stackTrace": [
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                            "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                            "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy29.click(Unknown Source)",
                            "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                            "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "driver.version: unknown"
                            ]
                          ]
                        },
                        "stackTrace": [],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "281978d9-dd63-4d99-a353-c4c986ee34e8"
                    },
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 11381,
                    "start": 1489741455097,
                    "end": 1489741466478
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2548,
                    "start": 1489741466545,
                    "end": 1489741469093
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1199,
                    "start": 1489741469094,
                    "end": 1489741470293
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "And set theme to poster",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "cause": {
                          "@class": "org.openqa.selenium.NoSuchElementException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Timed out after 5 seconds. Element not found",
                          "stackTrace": [
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                            "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                            "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy29.click(Unknown Source)",
                            "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                            "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "driver.version: unknown"
                            ]
                          ]
                        },
                        "stackTrace": [
                          "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "cb67c328-6304-482b-b415-21a72deb06b3"
                    },
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 10936,
                    "start": 1489741470303,
                    "end": 1489741481239
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "NOT_PERFORMED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2527,
                    "start": 1489741481545,
                    "end": 1489741484072
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 819,
                    "start": 1489741484072,
                    "end": 1489741484891
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "And set theme to poster",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "cause": {
                          "@class": "org.openqa.selenium.NoSuchElementException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Timed out after 5 seconds. Element not found",
                          "stackTrace": [
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                            "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                            "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy29.click(Unknown Source)",
                            "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                            "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "driver.version: unknown"
                            ]
                          ]
                        },
                        "stackTrace": [],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "7dcff8ad-425e-407a-8c2f-ec7ec178ae7d"
                    },
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 10962,
                    "start": 1489741484891,
                    "end": 1489741495853
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 4628,
                    "start": 1489741495922,
                    "end": 1489741500550
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 741,
                    "start": 1489741500551,
                    "end": 1489741501292
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "FAILED",
                    "throwable": {
                      "detailMessage": "And set theme to poster",
                      "cause": {
                        "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                        "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "cause": {
                          "@class": "org.openqa.selenium.NoSuchElementException",
                          "@defined-in": "java.lang.Throwable",
                          "detailMessage": "Timed out after 5 seconds. Element not found",
                          "stackTrace": [
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                            "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                            "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                            "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                            "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy29.click(Unknown Source)",
                            "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                            "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                            "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                            "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                            "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                            "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                            "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                            "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                            "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                            "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                            "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                            "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                            "java.lang.reflect.Method.invoke(Method.java:483)",
                            "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                            "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                            "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                            "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                            "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                            "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                            "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                            "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                            "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                            "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                            "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                            "java.lang.Thread.run(Thread.java:745)"
                          ],
                          "suppressedExceptions": [
                            [],
                            []
                          ],
                          "extraInfo": [
                            [
                              "Driver info",
                              "driver.version: unknown"
                            ]
                          ]
                        },
                        "stackTrace": [
                          "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy29.click(Unknown Source)",
                          "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                          "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                      },
                      "stackTrace": [
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "f57eb721-46fc-4841-a52d-bb438ab1bbe6"
                    },
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 11016,
                    "start": 1489741501293,
                    "end": 1489741512309
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "NOT_PERFORMED",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "NOT_PERFORMED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741512380,
                  "end": 1489741512381
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 4303,
                  "start": 1489741512381,
                  "end": 1489741516684
                },
                {
                  "step": "And enter custom ApiKey {InvalidApiKey123}",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
                  "durationInMillis": 468,
                  "start": 1489741516685,
                  "end": 1489741517153
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 148,
                  "start": 1489741517155,
                  "end": 1489741517303
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 348,
                  "start": 1489741517303,
                  "end": 1489741517651
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1489741517651,
                  "end": 1489741517684
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741517684,
                  "end": 1489741517685
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom ApiKey {InvalidApiKey123}",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "NOT_PERFORMED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741517753,
                  "end": 1489741517754
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2995,
                  "start": 1489741517754,
                  "end": 1489741520749
                },
                {
                  "step": "And enter custom EventId \"invalidEventId123\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
                  "durationInMillis": 398,
                  "start": 1489741520750,
                  "end": 1489741521148
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 122,
                  "start": 1489741521149,
                  "end": 1489741521271
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 539,
                  "start": 1489741521273,
                  "end": 1489741521812
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33,
                  "start": 1489741521813,
                  "end": 1489741521846
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741521846,
                  "end": 1489741521846
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom EventId \"invalidEventId123\"",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 142025,
        "start": 1489741379885,
        "end": 1489741521910
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Event Discovery Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": [
                {
                  "@name": "NotImplemented",
                  "@value": ""
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          }
        ],
        "name": "EventDiscoveryWidget.story"
      },
      "localizedNarrative": "In order to setup Event Discovery Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741521913,
                  "end": 1489741521914
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6247,
                  "start": 1489741521914,
                  "end": 1489741528161
                },
                {
                  "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "durationInMillis": 383,
                  "start": 1489741528162,
                  "end": 1489741528545
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35,
                  "start": 1489741528546,
                  "end": 1489741528581
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741528581,
                  "end": 1489741528581
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then the required fields are not empty and have default values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741528658,
                  "end": 1489741528659
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4869,
                  "start": 1489741528659,
                  "end": 1489741533528
                },
                {
                  "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 9333,
                  "start": 1489741533529,
                  "end": 1489741542862
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 353,
                  "start": 1489741542865,
                  "end": 1489741543218
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 807,
                  "start": 1489741543219,
                  "end": 1489741544026
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1531,
                  "start": 1489741544026,
                  "end": 1489741545557
                },
                {
                  "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "durationInMillis": 791,
                  "start": 1489741545558,
                  "end": 1489741546349
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741546349,
                  "end": 1489741546372
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741546372,
                  "end": 1489741546372
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "And store all fields values on the Event Discovery Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "keyword",
                  "ADELE"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5031,
                    "start": 1489741546443,
                    "end": 1489741551474
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 436,
                    "start": 1489741551475,
                    "end": 1489741551911
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 2339,
                    "start": 1489741551912,
                    "end": 1489741554251
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "keyword",
                  "STING"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5197,
                    "start": 1489741554318,
                    "end": 1489741559515
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 236,
                    "start": 1489741559516,
                    "end": 1489741559752
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 2238,
                    "start": 1489741559753,
                    "end": 1489741561991
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5258,
                    "start": 1489741562060,
                    "end": 1489741567318
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2388,
                    "start": 1489741567319,
                    "end": 1489741569707
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                    "durationInMillis": 41,
                    "start": 1489741569708,
                    "end": 1489741569749
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5046,
                    "start": 1489741569816,
                    "end": 1489741574862
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2631,
                    "start": 1489741574863,
                    "end": 1489741577494
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                    "durationInMillis": 647,
                    "start": 1489741577494,
                    "end": 1489741578141
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6709,
                    "start": 1489741578211,
                    "end": 1489741584920
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 2736,
                    "start": 1489741584920,
                    "end": 1489741587656
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 70,
                    "start": 1489741587657,
                    "end": 1489741587727
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4757,
                    "start": 1489741587801,
                    "end": 1489741592558
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 4095,
                    "start": 1489741592559,
                    "end": 1489741596654
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 66,
                    "start": 1489741596655,
                    "end": 1489741596721
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 7486,
                    "start": 1489741596796,
                    "end": 1489741604282
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2578,
                    "start": 1489741604283,
                    "end": 1489741606861
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 419,
                    "start": 1489741606862,
                    "end": 1489741607281
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "101"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6779,
                    "start": 1489741607350,
                    "end": 1489741614129
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                    "durationInMillis": 2530,
                    "start": 1489741614130,
                    "end": 1489741616660
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 694,
                    "start": 1489741616660,
                    "end": 1489741617354
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "setValue",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 7551,
                    "start": 1489741617431,
                    "end": 1489741624982
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 937,
                    "start": 1489741624983,
                    "end": 1489741625920
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 375,
                    "start": 1489741625921,
                    "end": 1489741626296
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 168,
                    "start": 1489741626297,
                    "end": 1489741626465
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 99,
                    "start": 1489741626466,
                    "end": 1489741626565
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5131,
                    "start": 1489741626635,
                    "end": 1489741631766
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1115,
                    "start": 1489741631768,
                    "end": 1489741632883
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 440,
                    "start": 1489741632884,
                    "end": 1489741633324
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 172,
                    "start": 1489741633325,
                    "end": 1489741633497
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 97,
                    "start": 1489741633498,
                    "end": 1489741633595
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "19999"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4856,
                    "start": 1489741633662,
                    "end": 1489741638518
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1304,
                    "start": 1489741638518,
                    "end": 1489741639822
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 594,
                    "start": 1489741639822,
                    "end": 1489741640416
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 221,
                    "start": 1489741640417,
                    "end": 1489741640638
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 136,
                    "start": 1489741640639,
                    "end": 1489741640775
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "20000"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5902,
                    "start": 1489741640930,
                    "end": 1489741646832
                  },
                  {
                    "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 1058,
                    "start": 1489741646833,
                    "end": 1489741647891
                  },
                  {
                    "step": "And use GeoPosition on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                    "durationInMillis": 428,
                    "start": 1489741647892,
                    "end": 1489741648320
                  },
                  {
                    "step": "And set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set Radius ｟20000｠ on Event Discovery Widget page",
                    "durationInMillis": 369,
                    "start": 1489741648321,
                    "end": 1489741648690
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 136,
                    "start": 1489741648691,
                    "end": 1489741648827
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode 90015 on Event Discovery Widget Page",
                  "And use GeoPosition on Event Discovery Widget page",
                  "And set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741648926,
                  "end": 1489741648927
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6918,
                  "start": 1489741648928,
                  "end": 1489741655846
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 432,
                  "start": 1489741655847,
                  "end": 1489741656279
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 708,
                  "start": 1489741656279,
                  "end": 1489741656987
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 129,
                  "start": 1489741656988,
                  "end": 1489741657117
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741657117,
                  "end": 1489741657118
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5890,
                    "start": 1489741657188,
                    "end": 1489741663078
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 790,
                    "start": 1489741663079,
                    "end": 1489741663869
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 482,
                    "start": 1489741663869,
                    "end": 1489741664351
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 721,
                    "start": 1489741664352,
                    "end": 1489741665073
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 805,
                    "start": 1489741665074,
                    "end": 1489741665879
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1896,
                    "start": 1489741665880,
                    "end": 1489741667776
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 378,
                    "start": 1489741667777,
                    "end": 1489741668155
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4279,
                    "start": 1489741668222,
                    "end": 1489741672501
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 981,
                    "start": 1489741672502,
                    "end": 1489741673483
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 397,
                    "start": 1489741673483,
                    "end": 1489741673880
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 724,
                    "start": 1489741673881,
                    "end": 1489741674605
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1153,
                    "start": 1489741674606,
                    "end": 1489741675759
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1307,
                    "start": 1489741675759,
                    "end": 1489741677066
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 196,
                    "start": 1489741677067,
                    "end": 1489741677263
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 4932,
                    "start": 1489741677333,
                    "end": 1489741682265
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 979,
                    "start": 1489741682267,
                    "end": 1489741683246
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 383,
                    "start": 1489741683247,
                    "end": 1489741683630
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 1076,
                    "start": 1489741683631,
                    "end": 1489741684707
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 958,
                    "start": 1489741684708,
                    "end": 1489741685666
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1291,
                    "start": 1489741685666,
                    "end": 1489741686957
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 67,
                    "start": 1489741686958,
                    "end": 1489741687025
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 5679,
                    "start": 1489741687091,
                    "end": 1489741692770
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1043,
                    "start": 1489741692771,
                    "end": 1489741693814
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 382,
                    "start": 1489741693815,
                    "end": 1489741694197
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 738,
                    "start": 1489741694198,
                    "end": 1489741694936
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1054,
                    "start": 1489741694936,
                    "end": 1489741695990
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1377,
                    "start": 1489741695991,
                    "end": 1489741697368
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 896,
                    "start": 1489741697368,
                    "end": 1489741698264
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 6145,
                    "start": 1489741698332,
                    "end": 1489741704477
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1029,
                    "start": 1489741704478,
                    "end": 1489741705507
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 600,
                    "start": 1489741705507,
                    "end": 1489741706107
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 704,
                    "start": 1489741706109,
                    "end": 1489741706813
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1016,
                    "start": 1489741706813,
                    "end": 1489741707829
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 1511,
                    "start": 1489741707830,
                    "end": 1489741709341
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 92,
                    "start": 1489741709341,
                    "end": 1489741709433
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741709502,
                  "end": 1489741709503
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 6582,
                  "start": 1489741709503,
                  "end": 1489741716085
                },
                {
                  "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
                  "durationInMillis": 643,
                  "start": 1489741716086,
                  "end": 1489741716729
                },
                {
                  "step": "Then the event message is shown \"Here other options for you.\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
                  "durationInMillis": 644,
                  "start": 1489741716730,
                  "end": 1489741717374
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489741717375,
                  "end": 1489741717397
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741717398,
                  "end": 1489741717398
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                "Then the event message is shown \"Here other options for you.\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 195553,
        "start": 1489741521913,
        "end": 1489741717466
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/FeedbackWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "send feedback",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the feedback widget\nand have ability to send feedback form to support",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          }
        ],
        "name": "FeedbackWidget.story"
      },
      "localizedNarrative": "In order to send feedback\nAs a user of Ticketmaster Developer Portal\nI want to use the feedback widget\nand have ability to send feedback form to support",
      "allowed": true,
      "status": "PENDING",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741717469,
                  "end": 1489741717470
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1730,
                  "start": 1489741717470,
                  "end": 1489741719200
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And Feedback widget is not shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "35228b94-7c13-47ac-8860-e7cd7ad8d376"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then Feedback widget elements are shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then Feedback widget elements are shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "b1bd50c2-69b9-4a72-ad38-1db294b6cd7d"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 14,
                  "start": 1489741719206,
                  "end": 1489741719220
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741719220,
                  "end": 1489741719221
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Check that Feedback widget Elements are shown",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And Feedback widget is not shown",
                "When click Feedback button of Tutorials Widgets page",
                "Then Feedback widget elements are shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741719282,
                  "end": 1489741719283
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1783,
                  "start": 1489741719283,
                  "end": 1489741721066
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 118,
                  "start": 1489741721067,
                  "end": 1489741721185
                },
                {
                  "step": "Then click close button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then click close button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "3c127ba3-b961-463d-9c67-cd1e6737702f"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And Feedback widget is not shown",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "d1f32b1f-8582-4461-b222-9ff880f94efa"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 10,
                  "start": 1489741721188,
                  "end": 1489741721198
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741721198,
                  "end": 1489741721198
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget Close button",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "When click Feedback button of Tutorials Widgets page",
                "Then click close button of Feedback widget",
                "And Feedback widget is not shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741721261,
                  "end": 1489741721262
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1646,
                  "start": 1489741721262,
                  "end": 1489741722908
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 119,
                  "start": 1489741722908,
                  "end": 1489741723027
                },
                {
                  "step": "When all fields except Name are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Name are populated",
                  "durationInMillis": 413,
                  "start": 1489741723028,
                  "end": 1489741723441
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And click send button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "7d307a39-293e-427b-ace6-2a94403a9649"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then error notification is shown for Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "1a644a1c-168f-4922-a67d-09fc6578b32a"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 8,
                  "start": 1489741723443,
                  "end": 1489741723451
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741723451,
                  "end": 1489741723451
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for NAME field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Name are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741723512,
                  "end": 1489741723513
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 3494,
                  "start": 1489741723513,
                  "end": 1489741727007
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 120,
                  "start": 1489741727007,
                  "end": 1489741727127
                },
                {
                  "step": "When all fields except Email are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Email are populated",
                  "durationInMillis": 400,
                  "start": 1489741727128,
                  "end": 1489741727528
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "And click send button of Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "30247e63-6e7b-40e8-8ccb-abaa2872fcdc"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "PENDING",
                  "throwable": {
                    "@class": "org.jbehave.core.failures.PendingStepFound",
                    "detailMessage": "Then error notification is shown for Feedback widget",
                    "stackTrace": [
                      "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                      "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                      "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                      "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "d0f32b7a-04a4-42f7-998e-d80f8af662db"
                  },
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 9,
                  "start": 1489741727530,
                  "end": 1489741727539
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741727539,
                  "end": 1489741727539
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for Email field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Email are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "PENDING"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 10131,
        "start": 1489741717469,
        "end": 1489741727600
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/MapWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Map Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "MapWidget.story"
      },
      "localizedNarrative": "In order to setup Map Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "Then the required fields are not empty on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741727602,
                  "end": 1489741727602
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4274,
                  "start": 1489741727602,
                  "end": 1489741731876
                },
                {
                  "step": "Then the required fields are not empty on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
                  "durationInMillis": 244,
                  "start": 1489741731877,
                  "end": 1489741732121
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34,
                  "start": 1489741732122,
                  "end": 1489741732156
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741732156,
                  "end": 1489741732157
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "Then the required fields are not empty on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "And store all fields values on the Map Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Map Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741732227,
                  "end": 1489741732228
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 3849,
                  "start": 1489741732228,
                  "end": 1489741736077
                },
                {
                  "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
                  "durationInMillis": 6567,
                  "start": 1489741736077,
                  "end": 1489741742644
                },
                {
                  "step": "And store all fields values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Map Widget page",
                  "durationInMillis": 629,
                  "start": 1489741742646,
                  "end": 1489741743275
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 764,
                  "start": 1489741743275,
                  "end": 1489741744039
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1738,
                  "start": 1489741744040,
                  "end": 1489741745778
                },
                {
                  "step": "And embedded html code contains stored values on the Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
                  "durationInMillis": 783,
                  "start": 1489741745779,
                  "end": 1489741746562
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23,
                  "start": 1489741746562,
                  "end": 1489741746585
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741746585,
                  "end": 1489741746586
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
                "And store all fields values on the Map Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Map Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741746651,
                  "end": 1489741746652
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4277,
                  "start": 1489741746652,
                  "end": 1489741750929
                },
                {
                  "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 192,
                  "start": 1489741750930,
                  "end": 1489741751122
                },
                {
                  "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2263,
                  "start": 1489741751123,
                  "end": 1489741753386
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2739,
                  "start": 1489741753387,
                  "end": 1489741756126
                },
                {
                  "step": "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values equals to stored values of fields on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 114,
                  "start": 1489741756127,
                  "end": 1489741756241
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22,
                  "start": 1489741756241,
                  "end": 1489741756263
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741756263,
                  "end": 1489741756264
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values on Map Widget page: apiKey,keyword,zipCode",
                "And change values for on Map Widget page: apiKey,keyword,zipCode",
                "When click reset button",
                "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And store values on Map Widget page: apiKey,keyword,zipCode",
              "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "When click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741756327,
                  "end": 1489741756328
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4361,
                  "start": 1489741756328,
                  "end": 1489741760689
                },
                {
                  "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 294,
                  "start": 1489741760689,
                  "end": 1489741760983
                },
                {
                  "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 2201,
                  "start": 1489741760984,
                  "end": 1489741763185
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 2729,
                  "start": 1489741763186,
                  "end": 1489741765915
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 1160,
                  "start": 1489741765916,
                  "end": 1489741767076
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 1423,
                  "start": 1489741767076,
                  "end": 1489741768499
                },
                {
                  "step": "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code on Map Widget contains stored values of: ｟apiKey,keyword,zipCode｠",
                  "durationInMillis": 225,
                  "start": 1489741768499,
                  "end": 1489741768724
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24,
                  "start": 1489741768724,
                  "end": 1489741768748
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741768748,
                  "end": 1489741768748
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And store values on Map Widget page: apiKey,keyword,zipCode",
                "And change values for on Map Widget page: apiKey,keyword,zipCode",
                "When click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741768812,
                  "end": 1489741768812
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 3787,
                  "start": 1489741768812,
                  "end": 1489741772599
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 277,
                  "start": 1489741772600,
                  "end": 1489741772877
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 676,
                  "start": 1489741772878,
                  "end": 1489741773554
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 56,
                  "start": 1489741773555,
                  "end": 1489741773611
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741773611,
                  "end": 1489741773612
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Map Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/MapWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741773678,
                  "end": 1489741773678
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Map Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Map Widget page",
                  "durationInMillis": 4281,
                  "start": 1489741773679,
                  "end": 1489741777960
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 388,
                  "start": 1489741777961,
                  "end": 1489741778349
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 499,
                  "start": 1489741778350,
                  "end": 1489741778849
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19,
                  "start": 1489741778850,
                  "end": 1489741778869
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741778869,
                  "end": 1489741778870
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Map Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 51330,
        "start": 1489741727601,
        "end": 1489741778931
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/SummaryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          }
        ],
        "name": "SummaryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741778934,
                  "end": 1489741778934
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 4457,
                  "start": 1489741778934,
                  "end": 1489741783391
                },
                {
                  "step": "Then Summary widget is shown for Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Getting Started page",
                  "durationInMillis": 132,
                  "start": 1489741783391,
                  "end": 1489741783523
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31,
                  "start": 1489741783523,
                  "end": 1489741783554
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0,
                  "start": 1489741783554,
                  "end": 1489741783554
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then Summary widget is shown for Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741783637,
                  "end": 1489741783638
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3495,
                  "start": 1489741783638,
                  "end": 1489741787133
                },
                {
                  "step": "Then Summary widget is shown for Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Home page",
                  "durationInMillis": 77,
                  "start": 1489741787134,
                  "end": 1489741787211
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26,
                  "start": 1489741787212,
                  "end": 1489741787238
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741787238,
                  "end": 1489741787239
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then Summary widget is shown for Home page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741787303,
                  "end": 1489741787304
                }
              ]
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 4569,
                  "start": 1489741787304,
                  "end": 1489741791873
                },
                {
                  "step": "Then Summary widget is shown for API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for API Explorer page",
                  "durationInMillis": 519,
                  "start": 1489741791874,
                  "end": 1489741792393
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 117,
                  "start": 1489741792393,
                  "end": 1489741792510
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1,
                  "start": 1489741792510,
                  "end": 1489741792511
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0,
                  "start": 0,
                  "end": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then Summary widget is shown for API Explorer page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13653,
        "start": 1489741778933,
        "end": 1489741792586
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Blogs page",
          "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Blogs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 17,
              "start": 1489740200247,
              "end": 1489740200264
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Blogs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Blogs page",
              "durationInMillis": 5088,
              "start": 1489740200269,
              "end": 1489740205357
            },
            {
              "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40414,
              "start": 1489740205360,
              "end": 1489740245774
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 54,
              "start": 1489740245776,
              "end": 1489740245830
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740245830,
              "end": 1489740245831
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/blogs/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Blogs page",
            "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/events/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Events page",
          "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/Events.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 5,
              "start": 1489740246034,
              "end": 1489740246039
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Events page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Events page",
              "durationInMillis": 1988,
              "start": 1489740246039,
              "end": 1489740248027
            },
            {
              "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10243,
              "start": 1489740248028,
              "end": 1489740258271
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1489740258272,
              "end": 1489740258304
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740258304,
              "end": 1489740258304
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/events/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Events page",
            "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for general page elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1489740258379,
              "end": 1489740258381
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 4863,
              "start": 1489740258381,
              "end": 1489740263244
            },
            {
              "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20274,
              "start": 1489740263245,
              "end": 1489740283519
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39,
              "start": 1489740283521,
              "end": 1489740283560
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740283560,
              "end": 1489740283560
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for general page elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for twitter's list of events",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check that Twitter's list of events is shown"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740283631,
              "end": 1489740283632
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2265,
              "start": 1489740283632,
              "end": 1489740285897
            },
            {
              "step": "Then check that Twitter's list of events is shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that Twitter's list of events is shown",
              "durationInMillis": 169,
              "start": 1489740285899,
              "end": 1489740286068
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39,
              "start": 1489740286069,
              "end": 1489740286108
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740286108,
              "end": 1489740286109
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for twitter's list of events",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check that Twitter's list of events is shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for all the page links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "elementLocation"
          ],
          "data": [
            [
              [
                "elementKey",
                "Get Your API Key"
              ],
              [
                "pageURL",
                "https://developer-acct.ticketmaster.com/user/login"
              ],
              [
                "elementLocation",
                "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
              ]
            ],
            [
              [
                "elementKey",
                "Review Documentation"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/getting-started/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Explore The API"
              ],
              [
                "pageURL",
                "{url}/api-explorer/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Android"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#android-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Backend"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#backend-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "iOS"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#iOS-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Web"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#web-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Tech blog"
              ],
              [
                "pageURL",
                "https://tech.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//h1[@class='site-title']/a"
              ]
            ],
            [
              [
                "elementKey",
                "Medium Publication"
              ],
              [
                "pageURL",
                "https://medium.com/ticketmaster-tech"
              ],
              [
                "elementLocation",
                "//h2[text()='Because Engineers are Fans Too!']"
              ]
            ],
            [
              [
                "elementKey",
                "Partner API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/partner/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Deals API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/deals-api/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Legacy docs"
              ],
              [
                "pageURL",
                "http://apidocs.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//td[@class='WikiLogoName']/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Get Your API Key"
            ],
            [
              "pageURL",
              "https://developer-acct.ticketmaster.com/user/login"
            ],
            [
              "elementLocation",
              "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2199,
                "start": 1489740286190,
                "end": 1489740288389
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                "durationInMillis": 2067,
                "start": 1489740288390,
                "end": 1489740290457
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                "durationInMillis": 230,
                "start": 1489740290458,
                "end": 1489740290688
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Review Documentation"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/getting-started/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2358,
                "start": 1489740290753,
                "end": 1489740293111
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                "durationInMillis": 1287,
                "start": 1489740293113,
                "end": 1489740294400
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                "durationInMillis": 572,
                "start": 1489740294402,
                "end": 1489740294974
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Explore The API"
            ],
            [
              "pageURL",
              "{url}/api-explorer/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2758,
                "start": 1489740295129,
                "end": 1489740297887
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                "durationInMillis": 3726,
                "start": 1489740297888,
                "end": 1489740301614
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                "durationInMillis": 97,
                "start": 1489740301615,
                "end": 1489740301712
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Android"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#android-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 5006,
                "start": 1489740301787,
                "end": 1489740306793
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                "durationInMillis": 216,
                "start": 1489740306795,
                "end": 1489740307011
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                "durationInMillis": 1557,
                "start": 1489740307012,
                "end": 1489740308569
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Backend"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#backend-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3071,
                "start": 1489740308635,
                "end": 1489740311706
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                "durationInMillis": 480,
                "start": 1489740311707,
                "end": 1489740312187
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                "durationInMillis": 42,
                "start": 1489740312188,
                "end": 1489740312230
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "iOS"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#iOS-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3057,
                "start": 1489740312298,
                "end": 1489740315355
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                "durationInMillis": 499,
                "start": 1489740315356,
                "end": 1489740315855
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                "durationInMillis": 36,
                "start": 1489740315857,
                "end": 1489740315893
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Web"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#web-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2674,
                "start": 1489740315959,
                "end": 1489740318633
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                "durationInMillis": 506,
                "start": 1489740318634,
                "end": 1489740319140
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                "durationInMillis": 37,
                "start": 1489740319141,
                "end": 1489740319178
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Tech blog"
            ],
            [
              "pageURL",
              "https://tech.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//h1[@class='site-title']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3799,
                "start": 1489740319250,
                "end": 1489740323049
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                "durationInMillis": 251,
                "start": 1489740323050,
                "end": 1489740323301
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                "durationInMillis": 3079,
                "start": 1489740323303,
                "end": 1489740326382
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Medium Publication"
            ],
            [
              "pageURL",
              "https://medium.com/ticketmaster-tech"
            ],
            [
              "elementLocation",
              "//h2[text()='Because Engineers are Fans Too!']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2691,
                "start": 1489740326464,
                "end": 1489740329155
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                "durationInMillis": 234,
                "start": 1489740329157,
                "end": 1489740329391
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                "durationInMillis": 1332,
                "start": 1489740329392,
                "end": 1489740330724
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Partner API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/partner/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2120,
                "start": 1489740330788,
                "end": 1489740332908
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                "durationInMillis": 326,
                "start": 1489740332910,
                "end": 1489740333236
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                "durationInMillis": 1437,
                "start": 1489740333238,
                "end": 1489740334675
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Deals API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/deals-api/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2451,
                "start": 1489740334740,
                "end": 1489740337191
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                "durationInMillis": 1720,
                "start": 1489740337192,
                "end": 1489740338912
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                "durationInMillis": 288,
                "start": 1489740338913,
                "end": 1489740339201
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Legacy docs"
            ],
            [
              "pageURL",
              "http://apidocs.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//td[@class='WikiLogoName']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3999,
                "start": 1489740339279,
                "end": 1489740343278
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                "durationInMillis": 196,
                "start": 1489740343279,
                "end": 1489740343475
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                "durationInMillis": 1486,
                "start": 1489740343476,
                "end": 1489740344962
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Open Source"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/"
              ],
              [
                "pageTitle",
                "//h1[@id='logo']"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/OpenSource.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Open Source"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/"
            ],
            [
              "pageTitle",
              "//h1[@id='logo']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4076,
                "start": 1489740345034,
                "end": 1489740349110
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                "durationInMillis": 358,
                "start": 1489740349111,
                "end": 1489740349469
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                "durationInMillis": 23,
                "start": 1489740349470,
                "end": 1489740349493
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "| searchRequest |\n|      test     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "searchRequest"
          ],
          "data": [
            [
              [
                "searchRequest",
                "test"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "And insert Search Parameter <searchRequest> and navigate to Search page",
          "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Search.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "searchRequest",
              "test"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4086,
                "start": 1489740349563,
                "end": 1489740353649
              },
              {
                "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                "durationInMillis": 371,
                "start": 1489740353651,
                "end": 1489740354022
              },
              {
                "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                "durationInMillis": 22424,
                "start": 1489740354024,
                "end": 1489740376448
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Then check general page elements for Pantheon Create New Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2281,
              "start": 1489740376522,
              "end": 1489740378803
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1121,
              "start": 1489740378804,
              "end": 1489740379925
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 996,
              "start": 1489740379926,
              "end": 1489740380922
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 4,
              "start": 1489740380932,
              "end": 1489740380936
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Then check general page elements for Pantheon Create New Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
              "durationInMillis": 20430,
              "start": 1489740380937,
              "end": 1489740401367
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1489740401367,
              "end": 1489740401394
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740401394,
              "end": 1489740401395
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Then check general page elements for Pantheon Create New Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2567,
              "start": 1489740401467,
              "end": 1489740404034
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1056,
              "start": 1489740404035,
              "end": 1489740405091
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 1077,
              "start": 1489740405092,
              "end": 1489740406169
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740406169,
              "end": 1489740406170
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 781,
              "start": 1489740406170,
              "end": 1489740406951
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 129,
              "start": 1489740406953,
              "end": 1489740407082
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1047,
              "start": 1489740407082,
              "end": 1489740408129
            },
            {
              "step": "Then the message The answer you entered for the CAPTCHA was not correct. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟The answer you entered for the CAPTCHA was not correct.｠ is displayed",
              "durationInMillis": 98,
              "start": 1489740408130,
              "end": 1489740408228
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 50,
              "start": 1489740408228,
              "end": 1489740408278
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740408278,
              "end": 1489740408279
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.14 Create New Account - fail the CAPTCHA check]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message The answer you entered for the CAPTCHA was not correct. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
          "When click Create New Account on Register Page",
          "Then the message I agree to the Terms of Use field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3077,
              "start": 1489740408357,
              "end": 1489740411434
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 976,
              "start": 1489740411435,
              "end": 1489740412411
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 1109,
              "start": 1489740412412,
              "end": 1489740413521
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740413522,
              "end": 1489740413523
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 653,
              "start": 1489740413523,
              "end": 1489740414176
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1107,
              "start": 1489740414178,
              "end": 1489740415285
            },
            {
              "step": "Then the message I agree to the Terms of Use field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟I agree to the Terms of Use field is required.｠ is displayed",
              "durationInMillis": 162,
              "start": 1489740415286,
              "end": 1489740415448
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489740415448,
              "end": 1489740415482
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740415482,
              "end": 1489740415483
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [2.2.3.31 Edit Profile - I Agree To The Terms & Conditions checkbox]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |bx@gmail.com|",
            "When click Create New Account on Register Page",
            "Then the message I agree to the Terms of Use field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message First Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2509,
              "start": 1489740415553,
              "end": 1489740418062
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 964,
              "start": 1489740418064,
              "end": 1489740419028
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 969,
              "start": 1489740419030,
              "end": 1489740419999
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740419999,
              "end": 1489740420000
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 681,
              "start": 1489740420000,
              "end": 1489740420681
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 112,
              "start": 1489740420683,
              "end": 1489740420795
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1013,
              "start": 1489740420795,
              "end": 1489740421808
            },
            {
              "step": "Then the message First Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟First Name field is required.｠ is displayed",
              "durationInMillis": 142,
              "start": 1489740421808,
              "end": 1489740421950
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1489740421950,
              "end": 1489740421975
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740421975,
              "end": 1489740421976
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - First Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|          |adele   |corporation|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message First Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Last Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 5164,
              "start": 1489740422047,
              "end": 1489740427211
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1019,
              "start": 1489740427213,
              "end": 1489740428232
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 939,
              "start": 1489740428233,
              "end": 1489740429172
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1489740429172,
              "end": 1489740429174
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 663,
              "start": 1489740429174,
              "end": 1489740429837
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 139,
              "start": 1489740429839,
              "end": 1489740429978
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 953,
              "start": 1489740429979,
              "end": 1489740430932
            },
            {
              "step": "Then the message Last Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Last Name field is required.｠ is displayed",
              "durationInMillis": 143,
              "start": 1489740430933,
              "end": 1489740431076
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1489740431077,
              "end": 1489740431104
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740431104,
              "end": 1489740431104
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |        |corporation|company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Last Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Company Name field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 4267,
              "start": 1489740431169,
              "end": 1489740435436
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 766,
              "start": 1489740435437,
              "end": 1489740436203
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 1076,
              "start": 1489740436203,
              "end": 1489740437279
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740437280,
              "end": 1489740437281
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|］",
              "durationInMillis": 697,
              "start": 1489740437281,
              "end": 1489740437978
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 119,
              "start": 1489740437980,
              "end": 1489740438099
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1062,
              "start": 1489740438100,
              "end": 1489740439162
            },
            {
              "step": "Then the message Company Name field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Company Name field is required.｠ is displayed",
              "durationInMillis": 158,
              "start": 1489740439163,
              "end": 1489740439321
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1489740439322,
              "end": 1489740439351
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740439351,
              "end": 1489740439352
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Name validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |           |company.com   |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Company Name field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Company Site URL field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2155,
              "start": 1489740439419,
              "end": 1489740441574
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1110,
              "start": 1489740441575,
              "end": 1489740442685
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 970,
              "start": 1489740442685,
              "end": 1489740443655
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740443656,
              "end": 1489740443657
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|］",
              "durationInMillis": 753,
              "start": 1489740443658,
              "end": 1489740444411
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 137,
              "start": 1489740444413,
              "end": 1489740444550
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 1034,
              "start": 1489740444551,
              "end": 1489740445585
            },
            {
              "step": "Then the message Company Site URL field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Company Site URL field is required.｠ is displayed",
              "durationInMillis": 151,
              "start": 1489740445586,
              "end": 1489740445737
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1489740445737,
              "end": 1489740445766
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740445766,
              "end": 1489740445766
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Company Site URL validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|              |maamxde |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Company Site URL field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message Username field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2292,
              "start": 1489740445835,
              "end": 1489740448127
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 999,
              "start": 1489740448128,
              "end": 1489740449127
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 887,
              "start": 1489740449128,
              "end": 1489740450015
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740450015,
              "end": 1489740450016
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|］",
              "durationInMillis": 697,
              "start": 1489740450016,
              "end": 1489740450713
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 123,
              "start": 1489740450715,
              "end": 1489740450838
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 903,
              "start": 1489740450839,
              "end": 1489740451742
            },
            {
              "step": "Then the message Username field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Username field is required.｠ is displayed",
              "durationInMillis": 137,
              "start": 1489740451744,
              "end": 1489740451881
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489740451882,
              "end": 1489740451904
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740451904,
              "end": 1489740451905
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Username validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corporation|company.com   |        |bx@gmail.com|",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message Username field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
          "When click checkbox Terms of Use",
          "When click Create New Account on Register Page",
          "Then the message E-mail address field is required. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2070,
              "start": 1489740451970,
              "end": 1489740454040
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 999,
              "start": 1489740454041,
              "end": 1489740455040
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 846,
              "start": 1489740455041,
              "end": 1489740455887
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740455888,
              "end": 1489740455889
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter register values on Create New Account Page:［\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |］",
              "durationInMillis": 668,
              "start": 1489740455889,
              "end": 1489740456557
            },
            {
              "step": "When click checkbox Terms of Use",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click checkbox Terms of Use",
              "durationInMillis": 130,
              "start": 1489740456560,
              "end": 1489740456690
            },
            {
              "step": "When click Create New Account on Register Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Create New Account on Register Page",
              "durationInMillis": 869,
              "start": 1489740456691,
              "end": 1489740457560
            },
            {
              "step": "Then the message E-mail address field is required. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟E-mail address field is required.｠ is displayed",
              "durationInMillis": 163,
              "start": 1489740457561,
              "end": 1489740457724
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1489740457725,
              "end": 1489740457757
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740457757,
              "end": 1489740457758
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) [Create New Account - Email validation]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When enter register values on Create New Account Page:\n|firstName |lastName|companyName|companySiteUrl|userName|emailAddress|\n|apikey    |adele   |corpora.com|company.com   |maamxde |            |",
            "When click checkbox Terms of Use",
            "When click Create New Account on Register Page",
            "Then the message E-mail address field is required. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "When navigate to Pantheon Edit Profile page from User Account page",
          "Then check general page elements for Pantheon Edit Profile page"
        ]
      },
      "storyPath": "stories/site/pantheon/EditProfile.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740457838,
              "end": 1489740457839
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2254,
              "start": 1489740457839,
              "end": 1489740460093
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 759,
              "start": 1489740460094,
              "end": 1489740460853
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2996,
              "start": 1489740460854,
              "end": 1489740463850
            },
            {
              "step": "When navigate to Pantheon Edit Profile page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
              "durationInMillis": 2904,
              "start": 1489740463851,
              "end": 1489740466755
            },
            {
              "step": "Then check general page elements for Pantheon Edit Profile page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
              "durationInMillis": 20325,
              "start": 1489740466756,
              "end": 1489740487081
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27,
              "start": 1489740487082,
              "end": 1489740487109
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740487109,
              "end": 1489740487110
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "When navigate to Pantheon Edit Profile page from User Account page",
            "Then check general page elements for Pantheon Edit Profile page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Request New Password page from LogIn page",
          "Then check general page elements for Pantheon Request New Password page"
        ]
      },
      "storyPath": "stories/site/pantheon/RequestNewPassword.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1489740487202,
              "end": 1489740487204
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2226,
              "start": 1489740487206,
              "end": 1489740489432
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 864,
              "start": 1489740489432,
              "end": 1489740490296
            },
            {
              "step": "When navigate to Pantheon Request New Password page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
              "durationInMillis": 543,
              "start": 1489740490297,
              "end": 1489740490840
            },
            {
              "step": "Then check general page elements for Pantheon Request New Password page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
              "durationInMillis": 20349,
              "start": 1489740490841,
              "end": 1489740511190
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1489740511190,
              "end": 1489740511220
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740511220,
              "end": 1489740511220
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Request New Password page from LogIn page",
            "Then check general page elements for Pantheon Request New Password page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "Then check general page elements for Pantheon User Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 2,
              "start": 1489740511301,
              "end": 1489740511303
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3997,
              "start": 1489740511303,
              "end": 1489740515300
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1151,
              "start": 1489740515301,
              "end": 1489740516452
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2554,
              "start": 1489740516452,
              "end": 1489740519006
            },
            {
              "step": "Then check general page elements for Pantheon User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User Account page",
              "durationInMillis": 20410,
              "start": 1489740519007,
              "end": 1489740539417
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489740539418,
              "end": 1489740539442
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740539442,
              "end": 1489740539443
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [2.2.3.4 Login - Password field - enter valid password]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "Then check general page elements for Pantheon User Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When navigate to Pantheon Add New App page from User Account page",
          "Then check general page elements for Pantheon Add New App page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2344,
              "start": 1489740539516,
              "end": 1489740541860
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 940,
              "start": 1489740541861,
              "end": 1489740542801
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2741,
              "start": 1489740542802,
              "end": 1489740545543
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740545543,
              "end": 1489740545544
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When navigate to Pantheon Add New App page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Add New App page from User Account page",
              "durationInMillis": 1427,
              "start": 1489740545544,
              "end": 1489740546971
            },
            {
              "step": "Then check general page elements for Pantheon Add New App page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Add New App page",
              "durationInMillis": 20357,
              "start": 1489740546972,
              "end": 1489740567329
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 59,
              "start": 1489740567330,
              "end": 1489740567389
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740567389,
              "end": 1489740567390
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When navigate to Pantheon Add New App page from User Account page",
            "Then check general page elements for Pantheon Add New App page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "appName",
            "message"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "appName",
                "mamaxF-Appd2"
              ],
              [
                "message",
                "Callback URL is required for Oauth Product"
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "appName",
                "https://ticketmaster.com"
              ],
              [
                "message",
                "Application name field is required."
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given navigate to Pantheon Add New App page from User Account page",
          "When enter to the field <appFormField> value <appName>",
          "When save changes on Edit App Page",
          "Then the message <message> is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "appName",
              "mamaxF-Appd2"
            ],
            [
              "message",
              "Callback URL is required for Oauth Product"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4709,
                "start": 1489740567474,
                "end": 1489740572183
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 1626,
                "start": 1489740572184,
                "end": 1489740573810
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 3021,
                "start": 1489740573812,
                "end": 1489740576833
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given navigate to Pantheon Add New App page from User Account page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                "durationInMillis": 1390,
                "start": 1489740576835,
                "end": 1489740578225
              },
              {
                "step": "When enter to the field <appFormField> value <appName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When enter to the field ｟Application name｠ value ｟mamaxF-Appd2｠",
                "durationInMillis": 247,
                "start": 1489740578227,
                "end": 1489740578474
              },
              {
                "step": "When save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When save changes on Edit App Page",
                "durationInMillis": 1940,
                "start": 1489740578475,
                "end": 1489740580415
              },
              {
                "step": "Then the message <message> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                "durationInMillis": 513,
                "start": 1489740580416,
                "end": 1489740580929
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "appName",
              "https://ticketmaster.com"
            ],
            [
              "message",
              "Application name field is required."
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4417,
                "start": 1489740581023,
                "end": 1489740585440
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 1512,
                "start": 1489740585441,
                "end": 1489740586953
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 3177,
                "start": 1489740586954,
                "end": 1489740590131
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given navigate to Pantheon Add New App page from User Account page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
                "durationInMillis": 1549,
                "start": 1489740590132,
                "end": 1489740591681
              },
              {
                "step": "When enter to the field <appFormField> value <appName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://ticketmaster.com｠",
                "durationInMillis": 314,
                "start": 1489740591683,
                "end": 1489740591997
              },
              {
                "step": "When save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When save changes on Edit App Page",
                "durationInMillis": 1677,
                "start": 1489740591998,
                "end": 1489740593675
              },
              {
                "step": "Then the message <message> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                "durationInMillis": 801,
                "start": 1489740593676,
                "end": 1489740594477
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Add new App) Add new App negative [2.1.15 Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appName                  |message                                    |\n|Application name |mamaxF-Appd2              |Callback URL is required for Oauth Product |\n|Redirect URI     |https://ticketmaster.com |Application name field is required.        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appName",
                "message"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appName",
                    "mamaxF-Appd2"
                  ],
                  [
                    "message",
                    "Callback URL is required for Oauth Product"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appName",
                    "https://ticketmaster.com"
                  ],
                  [
                    "message",
                    "Application name field is required."
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When enter to the field <appFormField> value <appName>",
              "When save changes on Edit App Page",
              "Then the message <message> is displayed"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given navigate to Pantheon Add New App page from User Account page",
          "When enter to the field Application name value uniqueApp",
          "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
          "And save changes on Edit App Page",
          "Then the message App Created! is displayed",
          "Then open my Apps page",
          "And the App is appeared in the list of apps"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3393,
              "start": 1489740594566,
              "end": 1489740597959
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 962,
              "start": 1489740597960,
              "end": 1489740598922
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2851,
              "start": 1489740598923,
              "end": 1489740601774
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740601774,
              "end": 1489740601775
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given navigate to Pantheon Add New App page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given navigate to Pantheon Add New App page from User Account page",
              "durationInMillis": 1046,
              "start": 1489740601775,
              "end": 1489740602821
            },
            {
              "step": "When enter to the field Application name value uniqueApp",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter to the field ｟Application name｠ value ｟uniqueApp｠",
              "durationInMillis": 204,
              "start": 1489740602823,
              "end": 1489740603027
            },
            {
              "step": "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
              "durationInMillis": 172,
              "start": 1489740603028,
              "end": 1489740603200
            },
            {
              "step": "And save changes on Edit App Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And save changes on Edit App Page",
              "durationInMillis": 8292,
              "start": 1489740603201,
              "end": 1489740611493
            },
            {
              "step": "Then the message App Created! is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟App Created!｠ is displayed",
              "durationInMillis": 674,
              "start": 1489740611493,
              "end": 1489740612167
            },
            {
              "step": "Then open my Apps page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then open my Apps page",
              "durationInMillis": 166,
              "start": 1489740612168,
              "end": 1489740612334
            },
            {
              "step": "And the App is appeared in the list of apps",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And the App is appeared in the list of apps",
              "durationInMillis": 183,
              "start": 1489740612334,
              "end": 1489740612517
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32,
              "start": 1489740612517,
              "end": 1489740612549
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740612549,
              "end": 1489740612549
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(Pantheon|Add new App) [2.1.5 Add new App with values positive]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given navigate to Pantheon Add New App page from User Account page",
            "When enter to the field Application name value uniqueApp",
            "When enter to the field Redirect URI value https://oauth.ticketmaster.com",
            "And save changes on Edit App Page",
            "Then the message App Created! is displayed",
            "Then open my Apps page",
            "And the App is appeared in the list of apps"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "formError"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "formError",
                "Application name field is required."
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "formError",
                "Callback URL is required for Oauth Product"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "And open Edit App Page for the first application",
          "When clear field <appFormField> on Edit App Page",
          "And save changes on Edit App Page",
          "Then the message <formError> is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "formError",
              "Application name field is required."
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 4505,
                "start": 1489740612621,
                "end": 1489740617126
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 981,
                "start": 1489740617127,
                "end": 1489740618108
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4502,
                "start": 1489740618110,
                "end": 1489740622612
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 231,
                "start": 1489740622613,
                "end": 1489740622844
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 400,
                "start": 1489740622845,
                "end": 1489740623245
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                "durationInMillis": 3047,
                "start": 1489740623246,
                "end": 1489740626293
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 3168,
                "start": 1489740626295,
                "end": 1489740629463
              },
              {
                "step": "Then the message <formError> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Application name field is required.｠ is displayed",
                "durationInMillis": 644,
                "start": 1489740629465,
                "end": 1489740630109
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "formError",
              "Callback URL is required for Oauth Product"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3698,
                "start": 1489740630176,
                "end": 1489740633874
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 1066,
                "start": 1489740633875,
                "end": 1489740634941
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 3683,
                "start": 1489740634941,
                "end": 1489740638624
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 387,
                "start": 1489740638625,
                "end": 1489740639012
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 323,
                "start": 1489740639014,
                "end": 1489740639337
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                "durationInMillis": 2713,
                "start": 1489740639338,
                "end": 1489740642051
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 3497,
                "start": 1489740642052,
                "end": 1489740645549
              },
              {
                "step": "Then the message <formError> is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the message ｟Callback URL is required for Oauth Product｠ is displayed",
                "durationInMillis": 570,
                "start": 1489740645550,
                "end": 1489740646120
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |formError                                  |\n|Application name |Application name field is required.        |\n|Redirect URI     |Callback URL is required for Oauth Product |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "formError"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "formError",
                    "Application name field is required."
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "formError",
                    "Callback URL is required for Oauth Product"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And save changes on Edit App Page",
              "Then the message <formError> is displayed"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "appFormField",
            "appValue",
            "detailName"
          ],
          "data": [
            [
              [
                "appFormField",
                "Application name"
              ],
              [
                "appValue",
                "mamax-Appdf"
              ],
              [
                "detailName",
                "Application Name"
              ]
            ],
            [
              [
                "appFormField",
                "Redirect URI"
              ],
              [
                "appValue",
                "https://oauth.ticketmaster.com"
              ],
              [
                "detailName",
                "Callback URL"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "And open Edit App Page for the first application",
          "When clear field <appFormField> on Edit App Page",
          "And enter to the field <appFormField> value <appValue>",
          "And save changes on Edit App Page",
          "And the message App Updated! is displayed",
          "And open my Apps page",
          "And open Details tab on the application",
          "Then <detailName> have been applied on Edit App Page with value <appValue>"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "appFormField",
              "Application name"
            ],
            [
              "appValue",
              "mamax-Appdf"
            ],
            [
              "detailName",
              "Application Name"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3714,
                "start": 1489740646188,
                "end": 1489740649902
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 870,
                "start": 1489740649903,
                "end": 1489740650773
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4068,
                "start": 1489740650773,
                "end": 1489740654841
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 245,
                "start": 1489740654843,
                "end": 1489740655088
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 285,
                "start": 1489740655089,
                "end": 1489740655374
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Application name｠ on Edit App Page",
                "durationInMillis": 3088,
                "start": 1489740655375,
                "end": 1489740658463
              },
              {
                "step": "And enter to the field <appFormField> value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And enter to the field ｟Application name｠ value ｟mamax-Appdf｠",
                "durationInMillis": 55,
                "start": 1489740658464,
                "end": 1489740658519
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 8111,
                "start": 1489740658520,
                "end": 1489740666631
              },
              {
                "step": "And the message App Updated! is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                "durationInMillis": 681,
                "start": 1489740666632,
                "end": 1489740667313
              },
              {
                "step": "And open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open my Apps page",
                "durationInMillis": 118,
                "start": 1489740667314,
                "end": 1489740667432
              },
              {
                "step": "And open Details tab on the application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Details tab on the application",
                "durationInMillis": 248,
                "start": 1489740667433,
                "end": 1489740667681
              },
              {
                "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                  "cause": {
                    "@class": "org.junit.ComparisonFailure",
                    "detailMessage": "",
                    "stackTrace": [
                      "org.junit.Assert.assertEquals(Assert.java:115)",
                      "org.junit.Assert.assertEquals(Assert.java:144)",
                      "bla.tm.steps.pantheon.UserAppsSteps.checkIfChangesAreApplied(UserAppsSteps.java:51)",
                      "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.CGLIB$checkIfChangesAreApplied$8(<generated>)",
                      "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50$$FastClassByCGLIB$$12002a3a.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.checkIfChangesAreApplied(<generated>)",
                      "bla.tm.definitions.site.pantheon.UserAppsDefinition.changesHaveApplied(UserAppsDefinition.java:63)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "fExpected": "kggqhdie",
                    "fActual": "mamax-Appdf"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "1bbb5069-9583-4bfd-a9c5-e5ec7648d903"
                },
                "parametrisedStep": "Then ｟Application Name｠ have been applied on Edit App Page with value ｟mamax-Appdf｠",
                "durationInMillis": 648,
                "start": 1489740667682,
                "end": 1489740668330
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "appFormField",
              "Redirect URI"
            ],
            [
              "appValue",
              "https://oauth.ticketmaster.com"
            ],
            [
              "detailName",
              "Callback URL"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2310,
                "start": 1489740668406,
                "end": 1489740670716
              },
              {
                "step": "And navigate to Pantheon LogIn page from Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
                "durationInMillis": 839,
                "start": 1489740670717,
                "end": 1489740671556
              },
              {
                "step": "And navigate to Pantheon User Account page from LogIn page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
                "durationInMillis": 4228,
                "start": 1489740671556,
                "end": 1489740675784
              }
            ]
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open my Apps page",
                "durationInMillis": 134,
                "start": 1489740675785,
                "end": 1489740675919
              },
              {
                "step": "And open Edit App Page for the first application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Edit App Page for the first application",
                "durationInMillis": 262,
                "start": 1489740675920,
                "end": 1489740676182
              },
              {
                "step": "When clear field <appFormField> on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When clear field ｟Redirect URI｠ on Edit App Page",
                "durationInMillis": 2781,
                "start": 1489740676183,
                "end": 1489740678964
              },
              {
                "step": "And enter to the field <appFormField> value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And enter to the field ｟Redirect URI｠ value ｟https://oauth.ticketmaster.com｠",
                "durationInMillis": 97,
                "start": 1489740678965,
                "end": 1489740679062
              },
              {
                "step": "And save changes on Edit App Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And save changes on Edit App Page",
                "durationInMillis": 8512,
                "start": 1489740679062,
                "end": 1489740687574
              },
              {
                "step": "And the message App Updated! is displayed",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And the message ｟App Updated!｠ is displayed",
                "durationInMillis": 658,
                "start": 1489740687574,
                "end": 1489740688232
              },
              {
                "step": "And open my Apps page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open my Apps page",
                "durationInMillis": 88,
                "start": 1489740688233,
                "end": 1489740688321
              },
              {
                "step": "And open Details tab on the application",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And open Details tab on the application",
                "durationInMillis": 160,
                "start": 1489740688322,
                "end": 1489740688482
              },
              {
                "step": "Then <detailName> have been applied on Edit App Page with value <appValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then ｟Callback URL｠ have been applied on Edit App Page with value ｟https://oauth.ticketmaster.com｠",
                "durationInMillis": 147,
                "start": 1489740688483,
                "end": 1489740688630
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(Pantheon|Edit App) Edit app positive [2.1.8 Edit application]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField     |appValue                       |detailName       |\n|Application name |mamax-Appdf                    |Application Name |\n|Redirect URI     |https://oauth.ticketmaster.com |Callback URL     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField",
                "appValue",
                "detailName"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "Application name"
                  ],
                  [
                    "appValue",
                    "mamax-Appdf"
                  ],
                  [
                    "detailName",
                    "Application Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ],
                  [
                    "appValue",
                    "https://oauth.ticketmaster.com"
                  ],
                  [
                    "detailName",
                    "Callback URL"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open my Apps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And enter to the field <appFormField> value <appValue>",
              "And save changes on Edit App Page",
              "And the message App Updated! is displayed",
              "And open my Apps page",
              "And open Details tab on the application",
              "Then <detailName> have been applied on Edit App Page with value <appValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open my Apps page",
          "When delete first App",
          "Then the message App Deleted! is displayed",
          "And the predefined app is removed from the list of apps"
        ]
      },
      "storyPath": "stories/site/pantheon/UserApps.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3809,
              "start": 1489740688775,
              "end": 1489740692584
            },
            {
              "step": "And navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 808,
              "start": 1489740692585,
              "end": 1489740693393
            },
            {
              "step": "And navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 4201,
              "start": 1489740693394,
              "end": 1489740697595
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740697596,
              "end": 1489740697597
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open my Apps page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open my Apps page",
              "durationInMillis": 213,
              "start": 1489740697598,
              "end": 1489740697811
            },
            {
              "step": "When delete first App",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When delete first App",
              "durationInMillis": 10936,
              "start": 1489740697812,
              "end": 1489740708748
            },
            {
              "step": "Then the message App Deleted! is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟App Deleted!｠ is displayed",
              "durationInMillis": 703,
              "start": 1489740708749,
              "end": 1489740709452
            },
            {
              "step": "And the predefined app is removed from the list of apps",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "And the predefined app is removed from the list of apps",
                "cause": {
                  "@class": "java.lang.AssertionError",
                  "stackTrace": [
                    "org.junit.Assert.fail(Assert.java:86)",
                    "org.junit.Assert.assertTrue(Assert.java:41)",
                    "org.junit.Assert.assertFalse(Assert.java:64)",
                    "org.junit.Assert.assertFalse(Assert.java:74)",
                    "bla.tm.steps.pantheon.UserAppsSteps.checkIsAppNotExists(UserAppsSteps.java:76)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.CGLIB$checkIsAppNotExists$12(<generated>)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50$$FastClassByCGLIB$$12002a3a.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAppsSteps$$EnhancerByCGLIB$$50ba2e50.checkIsAppNotExists(<generated>)",
                    "bla.tm.definitions.site.pantheon.UserAppsDefinition.appIsRemovedFromTheListOfApps(UserAppsDefinition.java:84)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ]
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "f8bca9ee-a265-4da2-9729-63cdc7ec3954"
              },
              "parametrisedStep": "And the predefined app is removed from the list of apps",
              "durationInMillis": 460,
              "start": 1489740709453,
              "end": 1489740709913
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 15,
              "start": 1489740709915,
              "end": 1489740709930
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740709930,
              "end": 1489740709930
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(Pantheon|Delete App) Delete App positive [2.1.9 Delete application]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open my Apps page",
            "When delete first App",
            "Then the message App Deleted! is displayed",
            "And the predefined app is removed from the list of apps"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Then check general page elements for Pantheon User LogIn page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2421,
              "start": 1489740710560,
              "end": 1489740712981
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 958,
              "start": 1489740712983,
              "end": 1489740713941
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740713941,
              "end": 1489740713942
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Then check general page elements for Pantheon User LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User LogIn page",
              "durationInMillis": 20244,
              "start": 1489740713943,
              "end": 1489740734187
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489740734188,
              "end": 1489740734210
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740734210,
              "end": 1489740734210
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Then check general page elements for Pantheon User LogIn page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When login to Pantheon with invaliduserName and 1234567",
          "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3480,
              "start": 1489740734279,
              "end": 1489740737759
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1113,
              "start": 1489740737760,
              "end": 1489740738873
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740738874,
              "end": 1489740738874
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When login to Pantheon with invaliduserName and 1234567",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When login to Pantheon with ｟invaliduserName｠ and ｟1234567｠",
              "durationInMillis": 705,
              "start": 1489740738875,
              "end": 1489740739580
            },
            {
              "step": "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Sorry, unrecognized username or password. Have you forgotten your password?｠ is displayed",
              "durationInMillis": 272,
              "start": 1489740739581,
              "end": 1489740739853
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 37,
              "start": 1489740739854,
              "end": 1489740739891
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740739891,
              "end": 1489740739891
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.2 Login - Username/Email field - enter invalid username]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When login to Pantheon with invaliduserName and 1234567",
            "Then the message Sorry, unrecognized username or password. Have you forgotten your password? is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "When login to Pantheon using OpenID invalidOpenID",
          "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 5273,
              "start": 1489740739959,
              "end": 1489740745232
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 872,
              "start": 1489740745233,
              "end": 1489740746105
            },
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740746106,
              "end": 1489740746107
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "When login to Pantheon using OpenID invalidOpenID",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When login to Pantheon using OpenID ｟invalidOpenID｠",
              "durationInMillis": 906,
              "start": 1489740746107,
              "end": 1489740747013
            },
            {
              "step": "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the message ｟Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly.｠ is displayed",
              "durationInMillis": 358,
              "start": 1489740747013,
              "end": 1489740747371
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29,
              "start": 1489740747372,
              "end": 1489740747401
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740747401,
              "end": 1489740747402
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) [2.2.3.8 Login - OpenID field - invalid OpenID]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "When login to Pantheon using OpenID invalidOpenID",
            "Then the message Sorry, that is not a valid OpenID. Ensure you have spelled your ID correctly. is displayed"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partners page",
          "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/partners/Partners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740747470,
              "end": 1489740747470
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partners page",
              "durationInMillis": 2113,
              "start": 1489740747470,
              "end": 1489740749583
            },
            {
              "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20288,
              "start": 1489740749585,
              "end": 1489740769873
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28,
              "start": 1489740769873,
              "end": 1489740769901
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740769901,
              "end": 1489740769901
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partners page",
            "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Certified Partners page",
          "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740769966,
              "end": 1489740769967
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Certified Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Certified Partners page",
              "durationInMillis": 2833,
              "start": 1489740769967,
              "end": 1489740772800
            },
            {
              "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10290,
              "start": 1489740772801,
              "end": 1489740783091
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 44,
              "start": 1489740783091,
              "end": 1489740783135
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740783135,
              "end": 1489740783136
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Certified Partners page",
            "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/distribution-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Distribution Partners page",
          "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740783206,
              "end": 1489740783207
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Distribution Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Distribution Partners page",
              "durationInMillis": 3536,
              "start": 1489740783207,
              "end": 1489740786743
            },
            {
              "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 602,
              "start": 1489740786744,
              "end": 1489740787346
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1489740787347,
              "end": 1489740787382
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740787382,
              "end": 1489740787382
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/distribution-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Distribution Partners page",
            "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Join The Nexus Program page",
          "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_Nexus.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740787452,
              "end": 1489740787453
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Join The Nexus Program page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Join The Nexus Program page",
              "durationInMillis": 2044,
              "start": 1489740787453,
              "end": 1489740789497
            },
            {
              "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 749,
              "start": 1489740789498,
              "end": 1489740790247
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 60,
              "start": 1489740790247,
              "end": 1489740790307
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740790307,
              "end": 1489740790308
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Join The Nexus Program page",
            "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/startups-and-developers/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Startups and Developers page",
          "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740790442,
              "end": 1489740790442
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Startups and Developers page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Startups and Developers page",
              "durationInMillis": 4776,
              "start": 1489740790442,
              "end": 1489740795218
            },
            {
              "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 399,
              "start": 1489740795219,
              "end": 1489740795618
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 37,
              "start": 1489740795619,
              "end": 1489740795656
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740795657,
              "end": 1489740795657
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/startups-and-developers/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Startups and Developers page",
            "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Products and Docs page",
          "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740795727,
              "end": 1489740795728
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Products and Docs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Products and Docs page",
              "durationInMillis": 1964,
              "start": 1489740795728,
              "end": 1489740797692
            },
            {
              "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40283,
              "start": 1489740797693,
              "end": 1489740837976
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489740837977,
              "end": 1489740837998
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740837998,
              "end": 1489740837998
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Products and Docs page",
            "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740838062,
              "end": 1489740838063
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 3553,
              "start": 1489740838063,
              "end": 1489740841616
            },
            {
              "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 10847,
              "start": 1489740841617,
              "end": 1489740852464
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489740852465,
              "end": 1489740852489
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740852489,
              "end": 1489740852489
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open ChangeLog page",
          "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740852554,
              "end": 1489740852555
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open ChangeLog page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open ChangeLog page",
              "durationInMillis": 1745,
              "start": 1489740852555,
              "end": 1489740854300
            },
            {
              "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 256,
              "start": 1489740854301,
              "end": 1489740854557
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 472,
              "start": 1489740854558,
              "end": 1489740855030
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740855030,
              "end": 1489740855031
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open ChangeLog page",
            "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740855108,
              "end": 1489740855109
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 4195,
              "start": 1489740855109,
              "end": 1489740859304
            },
            {
              "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 979,
              "start": 1489740859305,
              "end": 1489740860284
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489740860284,
              "end": 1489740860318
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740860318,
              "end": 1489740860318
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Deals API page",
          "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740860394,
              "end": 1489740860394
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Deals API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Deals API page",
              "durationInMillis": 3169,
              "start": 1489740860394,
              "end": 1489740863563
            },
            {
              "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 457,
              "start": 1489740863564,
              "end": 1489740864021
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1489740864021,
              "end": 1489740864046
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740864046,
              "end": 1489740864046
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Deals API page",
            "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v1 page",
          "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740864112,
              "end": 1489740864112
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v1 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v1 page",
              "durationInMillis": 4729,
              "start": 1489740864112,
              "end": 1489740868841
            },
            {
              "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 686,
              "start": 1489740868842,
              "end": 1489740869528
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489740869529,
              "end": 1489740869551
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489740869551,
              "end": 1489740869551
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery-api/v1/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v1 page",
            "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v2 page",
          "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740869615,
              "end": 1489740869616
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v2 page",
              "durationInMillis": 5593,
              "start": 1489740869616,
              "end": 1489740875209
            },
            {
              "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1881,
              "start": 1489740875210,
              "end": 1489740877091
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 121,
              "start": 1489740877092,
              "end": 1489740877213
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740877213,
              "end": 1489740877214
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v2 page",
            "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "When Commerce API menu has list of methods",
          "And open Getting Started page",
          "Then all the Commerce API methods are shown on Getting Started page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489740877282,
              "end": 1489740877283
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 3303,
              "start": 1489740877283,
              "end": 1489740880586
            },
            {
              "step": "When Commerce API menu has list of methods",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When Commerce API menu has list of methods",
              "durationInMillis": 128021,
              "start": 1489740880587,
              "end": 1489741008608
            },
            {
              "step": "And open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And open Getting Started page",
              "durationInMillis": 591,
              "start": 1489741008610,
              "end": 1489741009201
            },
            {
              "step": "Then all the Commerce API methods are shown on Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
              "durationInMillis": 41204,
              "start": 1489741009202,
              "end": 1489741050406
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 849,
              "start": 1489741050406,
              "end": 1489741051255
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741051255,
              "end": 1489741051255
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "When Commerce API menu has list of methods",
            "And open Getting Started page",
            "Then all the Commerce API methods are shown on Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741051367,
              "end": 1489741051368
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 1828,
              "start": 1489741051368,
              "end": 1489741053196
            },
            {
              "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1361,
              "start": 1489741053197,
              "end": 1489741054558
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 82,
              "start": 1489741054558,
              "end": 1489741054640
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741054640,
              "end": 1489741054641
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open International Discovery API page",
          "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741054711,
              "end": 1489741054712
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open International Discovery API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open International Discovery API page",
              "durationInMillis": 4179,
              "start": 1489741054712,
              "end": 1489741058891
            },
            {
              "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1864,
              "start": 1489741058891,
              "end": 1489741060755
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 51,
              "start": 1489741060755,
              "end": 1489741060806
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741060806,
              "end": 1489741060807
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open International Discovery API page",
            "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Inventory Status API page",
          "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741060872,
              "end": 1489741060873
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Inventory Status API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Inventory Status API page",
              "durationInMillis": 2448,
              "start": 1489741060873,
              "end": 1489741063321
            },
            {
              "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 396,
              "start": 1489741063322,
              "end": 1489741063718
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 82,
              "start": 1489741063718,
              "end": 1489741063800
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741063801,
              "end": 1489741063801
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Inventory Status API page",
            "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Oauth API page",
          "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741063870,
              "end": 1489741063870
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Oauth API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Oauth API page",
              "durationInMillis": 3460,
              "start": 1489741063870,
              "end": 1489741067330
            },
            {
              "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 207,
              "start": 1489741067331,
              "end": 1489741067538
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489741067539,
              "end": 1489741067560
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741067560,
              "end": 1489741067561
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Oauth API page",
            "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API page",
          "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741067624,
              "end": 1489741067625
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API page",
              "durationInMillis": 3490,
              "start": 1489741067625,
              "end": 1489741071115
            },
            {
              "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 742,
              "start": 1489741071116,
              "end": 1489741071858
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489741071859,
              "end": 1489741071880
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741071880,
              "end": 1489741071881
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API page",
            "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Publish API page",
          "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741071949,
              "end": 1489741071949
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Publish API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Publish API page",
              "durationInMillis": 3433,
              "start": 1489741071949,
              "end": 1489741075382
            },
            {
              "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 503,
              "start": 1489741075383,
              "end": 1489741075886
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489741075887,
              "end": 1489741075921
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741075921,
              "end": 1489741075921
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Publish API page",
            "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/sdks/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741076002,
              "end": 1489741076002
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open SDKs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open SDKs page",
              "durationInMillis": 2547,
              "start": 1489741076002,
              "end": 1489741078549
            },
            {
              "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 606,
              "start": 1489741078550,
              "end": 1489741079156
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1489741079156,
              "end": 1489741079194
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741079194,
              "end": 1489741079195
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/sdks/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open SDKs page",
            "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(products-and-docs/sdks/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "SDK-Java Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-java"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-JavaScript Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-javascript"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-Scala Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-scala"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "When check visibility and click <elementKey> element of SDKs page",
          "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Java Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-java"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3176,
                "start": 1489741079263,
                "end": 1489741082439
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                "durationInMillis": 1220,
                "start": 1489741082440,
                "end": 1489741083660
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1128,
                "start": 1489741083661,
                "end": 1489741084789
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-JavaScript Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-javascript"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 2693,
                "start": 1489741084851,
                "end": 1489741087544
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                "durationInMillis": 1000,
                "start": 1489741087545,
                "end": 1489741088545
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 779,
                "start": 1489741088546,
                "end": 1489741089325
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Scala Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-scala"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 3297,
                "start": 1489741089388,
                "end": 1489741092685
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                "durationInMillis": 1042,
                "start": 1489741092687,
                "end": 1489741093729
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1138,
                "start": 1489741093730,
                "end": 1489741094868
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Season Ticketing API page",
          "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741094942,
              "end": 1489741094943
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Season Ticketing API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Season Ticketing API page",
              "durationInMillis": 1928,
              "start": 1489741094943,
              "end": 1489741096871
            },
            {
              "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 937,
              "start": 1489741096872,
              "end": 1489741097809
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489741097810,
              "end": 1489741097831
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741097831,
              "end": 1489741097831
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Season Ticketing API page",
            "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Top Picks API page",
          "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741097909,
              "end": 1489741097910
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Top Picks API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Top Picks API page",
              "durationInMillis": 1996,
              "start": 1489741097910,
              "end": 1489741099906
            },
            {
              "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 639,
              "start": 1489741099907,
              "end": 1489741100546
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489741100547,
              "end": 1489741100571
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741100571,
              "end": 1489741100572
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Top Picks API page",
            "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741100685,
              "end": 1489741100685
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials page",
              "durationInMillis": 1718,
              "start": 1489741100685,
              "end": 1489741102403
            },
            {
              "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10179,
              "start": 1489741102404,
              "end": 1489741112583
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741112584,
              "end": 1489741112607
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741112607,
              "end": 1489741112608
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials page",
            "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "When check visibility and click <elementKey> element of Tutorials page",
          "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 4485,
                "start": 1489741112671,
                "end": 1489741117156
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                "durationInMillis": 3860,
                "start": 1489741117157,
                "end": 1489741121017
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 66,
                "start": 1489741121017,
                "end": 1489741121083
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1922,
                "start": 1489741121147,
                "end": 1489741123069
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 2108,
                "start": 1489741123070,
                "end": 1489741125178
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 103,
                "start": 1489741125180,
                "end": 1489741125283
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2447,
                "start": 1489741125350,
                "end": 1489741127797
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 1742,
                "start": 1489741127798,
                "end": 1489741129540
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 175,
                "start": 1489741129541,
                "end": 1489741129716
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1770,
                "start": 1489741129839,
                "end": 1489741131609
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                "durationInMillis": 3339,
                "start": 1489741131610,
                "end": 1489741134949
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 291,
                "start": 1489741134950,
                "end": 1489741135241
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1831,
                "start": 1489741135304,
                "end": 1489741137135
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 1767,
                "start": 1489741137136,
                "end": 1489741138903
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 177,
                "start": 1489741138904,
                "end": 1489741139081
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1726,
                "start": 1489741139155,
                "end": 1489741140881
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 1733,
                "start": 1489741140882,
                "end": 1489741142615
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 243,
                "start": 1489741142616,
                "end": 1489741142859
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2374,
                "start": 1489741142937,
                "end": 1489741145311
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                "durationInMillis": 1603,
                "start": 1489741145312,
                "end": 1489741146915
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 303,
                "start": 1489741146915,
                "end": 1489741147218
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1919,
                "start": 1489741147282,
                "end": 1489741149201
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 3574,
                "start": 1489741149202,
                "end": 1489741152776
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 41,
                "start": 1489741152777,
                "end": 1489741152818
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2590,
                "start": 1489741152879,
                "end": 1489741155469
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 3348,
                "start": 1489741155471,
                "end": 1489741158819
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 61,
                "start": 1489741158820,
                "end": 1489741158881
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741158950,
              "end": 1489741158951
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch page",
              "durationInMillis": 2772,
              "start": 1489741158951,
              "end": 1489741161723
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10176,
              "start": 1489741161724,
              "end": 1489741171900
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741171901,
              "end": 1489741171924
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741171924,
              "end": 1489741171925
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch page",
            "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "When check visibility and click <elementKey> element of Tutorials EventSearch page",
          "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1714,
                "start": 1489741171988,
                "end": 1489741173702
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 2624,
                "start": 1489741173703,
                "end": 1489741176327
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 57,
                "start": 1489741176328,
                "end": 1489741176385
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1858,
                "start": 1489741176452,
                "end": 1489741178310
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1670,
                "start": 1489741178310,
                "end": 1489741179980
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 131,
                "start": 1489741179981,
                "end": 1489741180112
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1694,
                "start": 1489741180174,
                "end": 1489741181868
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1527,
                "start": 1489741181869,
                "end": 1489741183396
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 602,
                "start": 1489741183396,
                "end": 1489741183998
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2881,
                "start": 1489741184076,
                "end": 1489741186957
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 1775,
                "start": 1489741186958,
                "end": 1489741188733
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 132,
                "start": 1489741188735,
                "end": 1489741188867
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1666,
                "start": 1489741188988,
                "end": 1489741190654
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1791,
                "start": 1489741190655,
                "end": 1489741192446
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 245,
                "start": 1489741192446,
                "end": 1489741192691
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 2967,
                "start": 1489741192801,
                "end": 1489741195768
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 2797,
                "start": 1489741195769,
                "end": 1489741198566
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 82,
                "start": 1489741198567,
                "end": 1489741198649
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventInSomeLocation page",
          "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741198716,
              "end": 1489741198717
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "durationInMillis": 4505,
              "start": 1489741198717,
              "end": 1489741203222
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 203,
              "start": 1489741203223,
              "end": 1489741203426
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1489741203426,
              "end": 1489741203444
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741203444,
              "end": 1489741203445
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventInSomeLocation page",
            "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
          "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741203508,
              "end": 1489741203509
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "durationInMillis": 4595,
              "start": 1489741203509,
              "end": 1489741208104
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 630,
              "start": 1489741208105,
              "end": 1489741208735
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741208735,
              "end": 1489741208758
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741208758,
              "end": 1489741208758
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
            "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741208823,
              "end": 1489741208823
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2237,
              "start": 1489741208824,
              "end": 1489741211061
            },
            {
              "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10259,
              "start": 1489741211062,
              "end": 1489741221321
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741221321,
              "end": 1489741221344
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741221344,
              "end": 1489741221344
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When check visibility and click <elementKey> element of Tutorials Widgets page",
          "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1807,
                "start": 1489741221407,
                "end": 1489741223214
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                "durationInMillis": 1319,
                "start": 1489741223215,
                "end": 1489741224534
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 123,
                "start": 1489741224535,
                "end": 1489741224658
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1652,
                "start": 1489741224720,
                "end": 1489741226372
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1213,
                "start": 1489741226373,
                "end": 1489741227586
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 101,
                "start": 1489741227587,
                "end": 1489741227688
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1768,
                "start": 1489741227752,
                "end": 1489741229520
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1246,
                "start": 1489741229520,
                "end": 1489741230766
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 217,
                "start": 1489741230766,
                "end": 1489741230983
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets EventDiscoveryWidget page",
          "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741231064,
              "end": 1489741231065
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "durationInMillis": 2394,
              "start": 1489741231065,
              "end": 1489741233459
            },
            {
              "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 371,
              "start": 1489741233459,
              "end": 1489741233830
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489741233831,
              "end": 1489741233853
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741233853,
              "end": 1489741233854
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets EventDiscoveryWidget page",
            "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741233917,
              "end": 1489741233918
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3902,
              "start": 1489741233918,
              "end": 1489741237820
            },
            {
              "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 221,
              "start": 1489741237820,
              "end": 1489741238041
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20,
              "start": 1489741238041,
              "end": 1489741238061
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741238061,
              "end": 1489741238062
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) [3.2.1.9 Disqus is present on calendar widget]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741238127,
              "end": 1489741238127
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3135,
              "start": 1489741238127,
              "end": 1489741241262
            },
            {
              "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 449,
              "start": 1489741241262,
              "end": 1489741241711
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 41,
              "start": 1489741241712,
              "end": 1489741241753
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741241754,
              "end": 1489741241754
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741241823,
              "end": 1489741241824
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6865,
              "start": 1489741241824,
              "end": 1489741248689
            },
            {
              "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 611,
              "start": 1489741248690,
              "end": 1489741249301
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1489741249302,
              "end": 1489741249328
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741249328,
              "end": 1489741249329
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Universal Checkout page",
          "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741249398,
              "end": 1489741249398
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Universal Checkout page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Universal Checkout page",
              "durationInMillis": 3379,
              "start": 1489741249399,
              "end": 1489741252778
            },
            {
              "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 607,
              "start": 1489741252779,
              "end": 1489741253386
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 71,
              "start": 1489741253387,
              "end": 1489741253458
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741253458,
              "end": 1489741253459
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/checkout/) [3.1.3 Widget checkout : Verification for general page's elements]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Universal Checkout page",
            "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open WordPress Widget page",
          "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741253525,
              "end": 1489741253525
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open WordPress Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open WordPress Widget page",
              "durationInMillis": 2907,
              "start": 1489741253525,
              "end": 1489741256432
            },
            {
              "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 646,
              "start": 1489741256432,
              "end": 1489741257078
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489741257078,
              "end": 1489741257112
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741257112,
              "end": 1489741257112
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/wordpress/) [3.1.4 Wordpress widget : Verification for general page's elements]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open WordPress Widget page",
            "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741257176,
              "end": 1489741257177
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1861,
              "start": 1489741257177,
              "end": 1489741259038
            },
            {
              "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10172,
              "start": 1489741259039,
              "end": 1489741269211
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489741269211,
              "end": 1489741269233
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741269233,
              "end": 1489741269234
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click DirectPaymentButton element of Widgets page",
          "Then check that new page opened from Direct Payment Button has has appropriate url"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741269295,
              "end": 1489741269296
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1931,
              "start": 1489741269296,
              "end": 1489741271227
            },
            {
              "step": "When check visibility and click DirectPaymentButton element of Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
              "durationInMillis": 782,
              "start": 1489741271228,
              "end": 1489741272010
            },
            {
              "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "durationInMillis": 1036,
              "start": 1489741272011,
              "end": 1489741273047
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489741273047,
              "end": 1489741273068
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741273068,
              "end": 1489741273068
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "When check visibility and click DirectPaymentButton element of Widgets page",
            "Then check that new page opened from Direct Payment Button has has appropriate url"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Checkout Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/checkout/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/event-discovery/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Countdown Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/countdown/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Calendar Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/calendar/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "WordPress Widget Learn Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/wordpress/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click <elementKey> element of Widgets page",
          "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Checkout Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/checkout/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2017,
                "start": 1489741273140,
                "end": 1489741275157
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                "durationInMillis": 2004,
                "start": 1489741275158,
                "end": 1489741277162
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                "durationInMillis": 567,
                "start": 1489741277162,
                "end": 1489741277729
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/event-discovery/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 3213,
                "start": 1489741277926,
                "end": 1489741281139
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                "durationInMillis": 5127,
                "start": 1489741281139,
                "end": 1489741286266
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                "durationInMillis": 49,
                "start": 1489741286267,
                "end": 1489741286316
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Countdown Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/countdown/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 4930,
                "start": 1489741286384,
                "end": 1489741291314
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                "durationInMillis": 1768,
                "start": 1489741291315,
                "end": 1489741293083
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                "durationInMillis": 721,
                "start": 1489741293086,
                "end": 1489741293807
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Calendar Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/calendar/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2368,
                "start": 1489741293880,
                "end": 1489741296248
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                "durationInMillis": 3180,
                "start": 1489741296249,
                "end": 1489741299429
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                "durationInMillis": 97,
                "start": 1489741299430,
                "end": 1489741299527
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "WordPress Widget Learn Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/wordpress/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2069,
                "start": 1489741299590,
                "end": 1489741301659
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                "durationInMillis": 1379,
                "start": 1489741301660,
                "end": 1489741303039
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                "durationInMillis": 512,
                "start": 1489741303039,
                "end": 1489741303551
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Support page",
          "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741303666,
              "end": 1489741303666
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Support page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Support page",
              "durationInMillis": 3580,
              "start": 1489741303666,
              "end": 1489741307246
            },
            {
              "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 784,
              "start": 1489741307247,
              "end": 1489741308031
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 96,
              "start": 1489741308031,
              "end": 1489741308127
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741308127,
              "end": 1489741308128
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Support page",
            "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/branding-guide/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Branding Guide page",
          "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_BrandingGuide.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741308196,
              "end": 1489741308197
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Branding Guide page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Branding Guide page",
              "durationInMillis": 2785,
              "start": 1489741308197,
              "end": 1489741310982
            },
            {
              "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 409,
              "start": 1489741310983,
              "end": 1489741311392
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 139,
              "start": 1489741311392,
              "end": 1489741311531
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741311531,
              "end": 1489741311531
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/branding-guide/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Branding Guide page",
            "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/contact-us/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Contact Us page",
          "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_ContactUs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741311603,
              "end": 1489741311604
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Contact Us page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Contact Us page",
              "durationInMillis": 2245,
              "start": 1489741311604,
              "end": 1489741313849
            },
            {
              "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10229,
              "start": 1489741313850,
              "end": 1489741324079
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1489741324079,
              "end": 1489741324109
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741324109,
              "end": 1489741324110
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/contact-us/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Contact Us page",
            "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/faq/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open FAQ page",
          "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_FAQ.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741324179,
              "end": 1489741324179
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open FAQ page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open FAQ page",
              "durationInMillis": 4372,
              "start": 1489741324179,
              "end": 1489741328551
            },
            {
              "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 340,
              "start": 1489741328552,
              "end": 1489741328892
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30,
              "start": 1489741328892,
              "end": 1489741328922
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741328922,
              "end": 1489741328923
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/faq/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open FAQ page",
            "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open General Terms Of Use page",
          "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741328990,
              "end": 1489741328990
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open General Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open General Terms Of Use page",
              "durationInMillis": 4234,
              "start": 1489741328991,
              "end": 1489741333225
            },
            {
              "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 481,
              "start": 1489741333226,
              "end": 1489741333707
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1489741333708,
              "end": 1489741333746
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741333746,
              "end": 1489741333747
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open General Terms Of Use page",
            "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API Terms Of Use page",
          "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741333812,
              "end": 1489741333813
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API Terms Of Use page",
              "durationInMillis": 3098,
              "start": 1489741333813,
              "end": 1489741336911
            },
            {
              "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 534,
              "start": 1489741336911,
              "end": 1489741337445
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 42,
              "start": 1489741337445,
              "end": 1489741337487
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741337487,
              "end": 1489741337488
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API Terms Of Use page",
            "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then the required fields are not empty on the Calendar Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741337564,
              "end": 1489741337565
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3724,
              "start": 1489741337565,
              "end": 1489741341289
            },
            {
              "step": "Then the required fields are not empty on the Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
              "durationInMillis": 298,
              "start": 1489741341289,
              "end": 1489741341587
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 57,
              "start": 1489741341587,
              "end": 1489741341644
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741341644,
              "end": 1489741341644
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then the required fields are not empty on the Calendar Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And change values for: apiKey,keyword,postalCodeApi",
          "And store values of: apiKey,keyword,postalCodeApi",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741341716,
              "end": 1489741341717
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3669,
              "start": 1489741341717,
              "end": 1489741345386
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 2307,
              "start": 1489741345387,
              "end": 1489741347694
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 169,
              "start": 1489741347695,
              "end": 1489741347864
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 783,
              "start": 1489741347865,
              "end": 1489741348648
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1730,
              "start": 1489741348648,
              "end": 1489741350378
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 192,
              "start": 1489741350379,
              "end": 1489741350571
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741350571,
              "end": 1489741350594
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741350594,
              "end": 1489741350595
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And change values for: apiKey,keyword,postalCodeApi",
            "And store values of: apiKey,keyword,postalCodeApi",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,postalCodeApi",
          "And change values for: apiKey,keyword,postalCodeApi",
          "When click reset button",
          "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741350660,
              "end": 1489741350661
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3103,
              "start": 1489741350661,
              "end": 1489741353764
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 450,
              "start": 1489741353765,
              "end": 1489741354215
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 2077,
              "start": 1489741354216,
              "end": 1489741356293
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2738,
              "start": 1489741356294,
              "end": 1489741359032
            },
            {
              "step": "Then values of fields: apiKey,keyword,postalCodeApi equals stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values of fields: ｟apiKey,keyword,postalCodeApi｠ equals stored values",
              "durationInMillis": 138,
              "start": 1489741359033,
              "end": 1489741359171
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741359171,
              "end": 1489741359194
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 7,
              "start": 1489741359194,
              "end": 1489741359201
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,postalCodeApi",
            "And change values for: apiKey,keyword,postalCodeApi",
            "When click reset button",
            "Then values of fields: apiKey,keyword,postalCodeApi equals stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,postalCodeApi",
          "And change values for: apiKey,keyword,postalCodeApi",
          "When click reset button on Calendar Widget Page",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741359271,
              "end": 1489741359272
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3669,
              "start": 1489741359272,
              "end": 1489741362941
            },
            {
              "step": "And store values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 310,
              "start": 1489741362941,
              "end": 1489741363251
            },
            {
              "step": "And change values for: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 2011,
              "start": 1489741363251,
              "end": 1489741365262
            },
            {
              "step": "When click reset button on Calendar Widget Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button on Calendar Widget Page",
              "durationInMillis": 587,
              "start": 1489741365263,
              "end": 1489741365850
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 749,
              "start": 1489741365851,
              "end": 1489741366600
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1398,
              "start": 1489741366601,
              "end": 1489741367999
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,postalCodeApi｠",
              "durationInMillis": 374,
              "start": 1489741367999,
              "end": 1489741368373
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489741368373,
              "end": 1489741368407
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741368407,
              "end": 1489741368407
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,postalCodeApi",
            "And change values for: apiKey,keyword,postalCodeApi",
            "When click reset button on Calendar Widget Page",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,postalCodeApi"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741368473,
              "end": 1489741368474
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4397,
              "start": 1489741368474,
              "end": 1489741372871
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 307,
              "start": 1489741372872,
              "end": 1489741373179
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 871,
              "start": 1489741373179,
              "end": 1489741374050
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489741374050,
              "end": 1489741374074
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741374074,
              "end": 1489741374075
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741374140,
              "end": 1489741374141
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 3551,
              "start": 1489741374141,
              "end": 1489741377692
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 448,
              "start": 1489741377693,
              "end": 1489741378141
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 1636,
              "start": 1489741378141,
              "end": 1489741379777
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38,
              "start": 1489741379778,
              "end": 1489741379816
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741379816,
              "end": 1489741379816
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then the required fields are not empty on the Countdown Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741379886,
              "end": 1489741379886
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2700,
              "start": 1489741379886,
              "end": 1489741382586
            },
            {
              "step": "Then the required fields are not empty on the Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
              "durationInMillis": 251,
              "start": 1489741382587,
              "end": 1489741382838
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 71,
              "start": 1489741382839,
              "end": 1489741382910
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741382910,
              "end": 1489741382910
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then the required fields are not empty on the Countdown Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741382975,
              "end": 1489741382976
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2514,
              "start": 1489741382976,
              "end": 1489741385490
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 197,
              "start": 1489741385491,
              "end": 1489741385688
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 896,
              "start": 1489741385688,
              "end": 1489741386584
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1389,
              "start": 1489741386584,
              "end": 1489741387973
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 128,
              "start": 1489741387974,
              "end": 1489741388102
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489741388102,
              "end": 1489741388126
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741388126,
              "end": 1489741388126
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741388192,
              "end": 1489741388192
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2128,
              "start": 1489741388193,
              "end": 1489741390321
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 1127,
              "start": 1489741390322,
              "end": 1489741391449
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 154,
              "start": 1489741391450,
              "end": 1489741391604
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 740,
              "start": 1489741391605,
              "end": 1489741392345
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1331,
              "start": 1489741392346,
              "end": 1489741393677
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 109,
              "start": 1489741393678,
              "end": 1489741393787
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18,
              "start": 1489741393788,
              "end": 1489741393806
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741393806,
              "end": 1489741393806
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "Then the ApiKey and EventId fields have stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741393869,
              "end": 1489741393869
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2062,
              "start": 1489741393869,
              "end": 1489741395931
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 715,
              "start": 1489741395932,
              "end": 1489741396647
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 589,
              "start": 1489741396648,
              "end": 1489741397237
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 74,
              "start": 1489741397238,
              "end": 1489741397312
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 2730,
              "start": 1489741397312,
              "end": 1489741400042
            },
            {
              "step": "Then the ApiKey and EventId fields have stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
              "durationInMillis": 73,
              "start": 1489741400043,
              "end": 1489741400116
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489741400116,
              "end": 1489741400138
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741400138,
              "end": 1489741400138
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "Then the ApiKey and EventId fields have stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741400201,
              "end": 1489741400202
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2549,
              "start": 1489741400202,
              "end": 1489741402751
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 219,
              "start": 1489741402752,
              "end": 1489741402971
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 505,
              "start": 1489741402972,
              "end": 1489741403477
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 91,
              "start": 1489741403477,
              "end": 1489741403568
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 2762,
              "start": 1489741403569,
              "end": 1489741406331
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 694,
              "start": 1489741406332,
              "end": 1489741407026
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1986,
              "start": 1489741407027,
              "end": 1489741409013
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 112,
              "start": 1489741409014,
              "end": 1489741409126
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21,
              "start": 1489741409126,
              "end": 1489741409147
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741409147,
              "end": 1489741409148
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When get eventId by keyword ZZ TOP",
          "And set first eventId from list",
          "Then the event poster contains ZZ TOP"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741409210,
              "end": 1489741409210
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3175,
              "start": 1489741409210,
              "end": 1489741412385
            },
            {
              "step": "When get eventId by keyword ZZ TOP",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When get eventId by keyword ｟ZZ TOP｠",
              "durationInMillis": 1196,
              "start": 1489741412387,
              "end": 1489741413583
            },
            {
              "step": "And set first eventId from list",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set first eventId from list",
              "durationInMillis": 2675,
              "start": 1489741413583,
              "end": 1489741416258
            },
            {
              "step": "Then the event poster contains ZZ TOP",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event poster contains ｟ZZ TOP｠",
              "durationInMillis": 233,
              "start": 1489741416258,
              "end": 1489741416491
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25,
              "start": 1489741416491,
              "end": 1489741416516
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741416516,
              "end": 1489741416516
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When get eventId by keyword ZZ TOP",
            "And set first eventId from list",
            "Then the event poster contains ZZ TOP"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741416583,
              "end": 1489741416584
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2868,
              "start": 1489741416584,
              "end": 1489741419452
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 299,
              "start": 1489741419453,
              "end": 1489741419752
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 613,
              "start": 1489741419753,
              "end": 1489741420366
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 140,
              "start": 1489741420367,
              "end": 1489741420507
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741420507,
              "end": 1489741420508
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to full-width",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored theme"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741420575,
              "end": 1489741420575
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3223,
              "start": 1489741420575,
              "end": 1489741423798
            },
            {
              "step": "And switch to VISUAL Tab",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And switch to VISUAL Tab",
              "durationInMillis": 779,
              "start": 1489741423799,
              "end": 1489741424578
            },
            {
              "step": "And set theme to full-width",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "And set theme to full-width",
                "cause": {
                  "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                  "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                  "cause": {
                    "@class": "org.openqa.selenium.NoSuchElementException",
                    "@defined-in": "java.lang.Throwable",
                    "detailMessage": "Timed out after 5 seconds. Element not found",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setFullWidthMode(CountdownWidgetImpl.java:162)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setFullWidthMode(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setFullWidth(PD_Widget_CountdownSteps.java:169)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setFullWidth$18(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "extraInfo": [
                      [
                        "Driver info",
                        "driver.version: unknown"
                      ]
                    ]
                  },
                  "stackTrace": [
                    "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                    "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                  "stackTrace": [
                    "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                    "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                    "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                    "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                    "com.sun.proxy.$Proxy29.click(Unknown Source)",
                    "bla.tm.widgets.CountdownWidgetImpl.setFullWidthMode(CountdownWidgetImpl.java:162)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                    "com.sun.proxy.$Proxy24.setFullWidthMode(Unknown Source)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setFullWidth(PD_Widget_CountdownSteps.java:169)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setFullWidth$18(<generated>)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setFullWidth(<generated>)",
                    "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToFullWidth(CountdownWidgetDefinition.java:55)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "c5fba93f-8b12-4338-a973-7ef2e8140806"
              },
              "parametrisedStep": "And set theme to full-width",
              "durationInMillis": 10965,
              "start": 1489741424579,
              "end": 1489741435544
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "And embedded html code contains stored theme",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "And embedded html code contains stored theme",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 4,
              "start": 1489741435548,
              "end": 1489741435552
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741435552,
              "end": 1489741435552
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And switch to VISUAL Tab",
            "And set theme to full-width",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored theme"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2408,
                "start": 1489741435847,
                "end": 1489741438255
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1048,
                "start": 1489741438256,
                "end": 1489741439304
              },
              {
                "step": "And set theme to poster",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "And set theme to poster",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "cause": {
                      "@class": "org.openqa.selenium.NoSuchElementException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Timed out after 5 seconds. Element not found",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "driver.version: unknown"
                        ]
                      ]
                    },
                    "stackTrace": [],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "bec88de6-6a1d-4271-98d6-ec1674c3e522"
                },
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 11087,
                "start": 1489741439304,
                "end": 1489741450391
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 3840,
                "start": 1489741450458,
                "end": 1489741454298
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 798,
                "start": 1489741454299,
                "end": 1489741455097
              },
              {
                "step": "And set theme to poster",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "And set theme to poster",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "cause": {
                      "@class": "org.openqa.selenium.NoSuchElementException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Timed out after 5 seconds. Element not found",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "driver.version: unknown"
                        ]
                      ]
                    },
                    "stackTrace": [],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "281978d9-dd63-4d99-a353-c4c986ee34e8"
                },
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 11381,
                "start": 1489741455097,
                "end": 1489741466478
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2548,
                "start": 1489741466545,
                "end": 1489741469093
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1199,
                "start": 1489741469094,
                "end": 1489741470293
              },
              {
                "step": "And set theme to poster",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "And set theme to poster",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "cause": {
                      "@class": "org.openqa.selenium.NoSuchElementException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Timed out after 5 seconds. Element not found",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "driver.version: unknown"
                        ]
                      ]
                    },
                    "stackTrace": [
                      "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "cb67c328-6304-482b-b415-21a72deb06b3"
                },
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 10936,
                "start": 1489741470303,
                "end": 1489741481239
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "NOT_PERFORMED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2527,
                "start": 1489741481545,
                "end": 1489741484072
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 819,
                "start": 1489741484072,
                "end": 1489741484891
              },
              {
                "step": "And set theme to poster",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "And set theme to poster",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "cause": {
                      "@class": "org.openqa.selenium.NoSuchElementException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Timed out after 5 seconds. Element not found",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "driver.version: unknown"
                        ]
                      ]
                    },
                    "stackTrace": [],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "7dcff8ad-425e-407a-8c2f-ec7ec178ae7d"
                },
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 10962,
                "start": 1489741484891,
                "end": 1489741495853
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 4628,
                "start": 1489741495922,
                "end": 1489741500550
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 741,
                "start": 1489741500551,
                "end": 1489741501292
              },
              {
                "step": "And set theme to poster",
                "type": "FAILED",
                "throwable": {
                  "detailMessage": "And set theme to poster",
                  "cause": {
                    "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                    "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "cause": {
                      "@class": "org.openqa.selenium.NoSuchElementException",
                      "@defined-in": "java.lang.Throwable",
                      "detailMessage": "Timed out after 5 seconds. Element not found",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy29.click(Unknown Source)",
                        "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "extraInfo": [
                        [
                          "Driver info",
                          "driver.version: unknown"
                        ]
                      ]
                    },
                    "stackTrace": [
                      "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-967748ae-091a-4b2e-bf7f-cf8d456ac9b9', ip: '172.17.0.14', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:176)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:312)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:708)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:947)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy29.click(Unknown Source)",
                      "bla.tm.widgets.CountdownWidgetImpl.setPosterTheme(CountdownWidgetImpl.java:167)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy24.setPosterTheme(Unknown Source)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps.setPosterTheme(PD_Widget_CountdownSteps.java:182)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.CGLIB$setPosterTheme$19(<generated>)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d$$FastClassByCGLIB$$7cfb3f3e.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.products_and_docs.PD_Widget_CountdownSteps$$EnhancerByCGLIB$$9688af3d.setPosterTheme(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.setThemeToPoster(CountdownWidgetDefinition.java:60)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:733)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                      "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                  },
                  "stackTrace": [
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:752)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "f57eb721-46fc-4841-a52d-bb438ab1bbe6"
                },
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 11016,
                "start": 1489741501293,
                "end": 1489741512309
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "NOT_PERFORMED",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "NOT_PERFORMED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom ApiKey {InvalidApiKey123}",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741512380,
              "end": 1489741512381
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 4303,
              "start": 1489741512381,
              "end": 1489741516684
            },
            {
              "step": "And enter custom ApiKey {InvalidApiKey123}",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
              "durationInMillis": 468,
              "start": 1489741516685,
              "end": 1489741517153
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 148,
              "start": 1489741517155,
              "end": 1489741517303
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 348,
              "start": 1489741517303,
              "end": 1489741517651
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1489741517651,
              "end": 1489741517684
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741517684,
              "end": 1489741517685
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom ApiKey {InvalidApiKey123}",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "NOT_PERFORMED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom EventId \"invalidEventId123\"",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741517753,
              "end": 1489741517754
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2995,
              "start": 1489741517754,
              "end": 1489741520749
            },
            {
              "step": "And enter custom EventId \"invalidEventId123\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
              "durationInMillis": 398,
              "start": 1489741520750,
              "end": 1489741521148
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 122,
              "start": 1489741521149,
              "end": 1489741521271
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 539,
              "start": 1489741521273,
              "end": 1489741521812
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33,
              "start": 1489741521813,
              "end": 1489741521846
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741521846,
              "end": 1489741521846
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom EventId \"invalidEventId123\"",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then the required fields are not empty and have default values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741521913,
              "end": 1489741521914
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6247,
              "start": 1489741521914,
              "end": 1489741528161
            },
            {
              "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "durationInMillis": 383,
              "start": 1489741528162,
              "end": 1489741528545
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35,
              "start": 1489741528546,
              "end": 1489741528581
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741528581,
              "end": 1489741528581
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then the required fields are not empty and have default values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Event Discovery Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741528658,
              "end": 1489741528659
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4869,
              "start": 1489741528659,
              "end": 1489741533528
            },
            {
              "step": "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Event Discovery Widget page:\n［|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 9333,
              "start": 1489741533529,
              "end": 1489741542862
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 353,
              "start": 1489741542865,
              "end": 1489741543218
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 807,
              "start": 1489741543219,
              "end": 1489741544026
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1531,
              "start": 1489741544026,
              "end": 1489741545557
            },
            {
              "step": "And embedded html code contains stored values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
              "durationInMillis": 791,
              "start": 1489741545558,
              "end": 1489741546349
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741546349,
              "end": 1489741546372
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741546372,
              "end": 1489741546372
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And change all possible fields on the Event Discovery Widget page:\n|apiKey |keyWord|postalCodeApi|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015        |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "And store all fields values on the Event Discovery Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "keyword"
          ],
          "data": [
            [
              [
                "keyword",
                "ADELE"
              ]
            ],
            [
              [
                "keyword",
                "STING"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword <keyword> on Event Discovery Widget page",
          "Then found events contains <keyword> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "keyword",
              "ADELE"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5031,
                "start": 1489741546443,
                "end": 1489741551474
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 436,
                "start": 1489741551475,
                "end": 1489741551911
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 2339,
                "start": 1489741551912,
                "end": 1489741554251
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "keyword",
              "STING"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5197,
                "start": 1489741554318,
                "end": 1489741559515
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 236,
                "start": 1489741559516,
                "end": 1489741559752
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 2238,
                "start": 1489741559753,
                "end": 1489741561991
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|\n| 1   |\n| 100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value"
          ],
          "data": [
            [
              [
                "value",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals or less than Event Count <value>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5258,
                "start": 1489741562060,
                "end": 1489741567318
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2388,
                "start": 1489741567319,
                "end": 1489741569707
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                "durationInMillis": 41,
                "start": 1489741569708,
                "end": 1489741569749
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5046,
                "start": 1489741569816,
                "end": 1489741574862
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2631,
                "start": 1489741574863,
                "end": 1489741577494
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                "durationInMillis": 647,
                "start": 1489741577494,
                "end": 1489741578141
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value",
            "actualValue"
          ],
          "data": [
            [
              [
                "value",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ],
              [
                "actualValue",
                "100"
              ]
            ],
            [
              [
                "value",
                "101"
              ],
              [
                "actualValue",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals Event Count <actualValue>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6709,
                "start": 1489741578211,
                "end": 1489741584920
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 2736,
                "start": 1489741584920,
                "end": 1489741587656
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 70,
                "start": 1489741587657,
                "end": 1489741587727
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4757,
                "start": 1489741587801,
                "end": 1489741592558
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 4095,
                "start": 1489741592559,
                "end": 1489741596654
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 66,
                "start": 1489741596655,
                "end": 1489741596721
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 7486,
                "start": 1489741596796,
                "end": 1489741604282
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2578,
                "start": 1489741604283,
                "end": 1489741606861
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 419,
                "start": 1489741606862,
                "end": 1489741607281
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "101"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6779,
                "start": 1489741607350,
                "end": 1489741614129
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                "durationInMillis": 2530,
                "start": 1489741614130,
                "end": 1489741616660
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 694,
                "start": 1489741616660,
                "end": 1489741617354
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "setValue",
            "actualValue"
          ],
          "data": [
            [
              [
                "setValue",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "19999"
              ],
              [
                "actualValue",
                "19999"
              ]
            ],
            [
              [
                "setValue",
                "20000"
              ],
              [
                "actualValue",
                "19999"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When change value of ZipCode 90015 on Event Discovery Widget Page",
          "And use GeoPosition on Event Discovery Widget page",
          "And set Radius <setValue> on Event Discovery Widget page",
          "Then Radius value is <actualValue> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "setValue",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 7551,
                "start": 1489741617431,
                "end": 1489741624982
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 937,
                "start": 1489741624983,
                "end": 1489741625920
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 375,
                "start": 1489741625921,
                "end": 1489741626296
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 168,
                "start": 1489741626297,
                "end": 1489741626465
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 99,
                "start": 1489741626466,
                "end": 1489741626565
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5131,
                "start": 1489741626635,
                "end": 1489741631766
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1115,
                "start": 1489741631768,
                "end": 1489741632883
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 440,
                "start": 1489741632884,
                "end": 1489741633324
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 172,
                "start": 1489741633325,
                "end": 1489741633497
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 97,
                "start": 1489741633498,
                "end": 1489741633595
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "19999"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4856,
                "start": 1489741633662,
                "end": 1489741638518
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1304,
                "start": 1489741638518,
                "end": 1489741639822
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 594,
                "start": 1489741639822,
                "end": 1489741640416
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 221,
                "start": 1489741640417,
                "end": 1489741640638
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 136,
                "start": 1489741640639,
                "end": 1489741640775
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "20000"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5902,
                "start": 1489741640930,
                "end": 1489741646832
              },
              {
                "step": "When change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 1058,
                "start": 1489741646833,
                "end": 1489741647891
              },
              {
                "step": "And use GeoPosition on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And use GeoPosition on Event Discovery Widget page",
                "durationInMillis": 428,
                "start": 1489741647892,
                "end": 1489741648320
              },
              {
                "step": "And set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set Radius ｟20000｠ on Event Discovery Widget page",
                "durationInMillis": 369,
                "start": 1489741648321,
                "end": 1489741648690
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 136,
                "start": 1489741648691,
                "end": 1489741648827
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode 90015 on Event Discovery Widget Page",
              "And use GeoPosition on Event Discovery Widget page",
              "And set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741648926,
              "end": 1489741648927
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6918,
              "start": 1489741648928,
              "end": 1489741655846
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 432,
              "start": 1489741655847,
              "end": 1489741656279
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 708,
              "start": 1489741656279,
              "end": 1489741656987
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 129,
              "start": 1489741656988,
              "end": 1489741657117
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741657117,
              "end": 1489741657118
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5890,
                "start": 1489741657188,
                "end": 1489741663078
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 790,
                "start": 1489741663079,
                "end": 1489741663869
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 482,
                "start": 1489741663869,
                "end": 1489741664351
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 721,
                "start": 1489741664352,
                "end": 1489741665073
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 805,
                "start": 1489741665074,
                "end": 1489741665879
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1896,
                "start": 1489741665880,
                "end": 1489741667776
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 378,
                "start": 1489741667777,
                "end": 1489741668155
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4279,
                "start": 1489741668222,
                "end": 1489741672501
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 981,
                "start": 1489741672502,
                "end": 1489741673483
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 397,
                "start": 1489741673483,
                "end": 1489741673880
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 724,
                "start": 1489741673881,
                "end": 1489741674605
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1153,
                "start": 1489741674606,
                "end": 1489741675759
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1307,
                "start": 1489741675759,
                "end": 1489741677066
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 196,
                "start": 1489741677067,
                "end": 1489741677263
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 4932,
                "start": 1489741677333,
                "end": 1489741682265
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 979,
                "start": 1489741682267,
                "end": 1489741683246
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 383,
                "start": 1489741683247,
                "end": 1489741683630
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 1076,
                "start": 1489741683631,
                "end": 1489741684707
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 958,
                "start": 1489741684708,
                "end": 1489741685666
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1291,
                "start": 1489741685666,
                "end": 1489741686957
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 67,
                "start": 1489741686958,
                "end": 1489741687025
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 5679,
                "start": 1489741687091,
                "end": 1489741692770
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1043,
                "start": 1489741692771,
                "end": 1489741693814
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 382,
                "start": 1489741693815,
                "end": 1489741694197
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 738,
                "start": 1489741694198,
                "end": 1489741694936
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1054,
                "start": 1489741694936,
                "end": 1489741695990
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1377,
                "start": 1489741695991,
                "end": 1489741697368
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 896,
                "start": 1489741697368,
                "end": 1489741698264
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 6145,
                "start": 1489741698332,
                "end": 1489741704477
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1029,
                "start": 1489741704478,
                "end": 1489741705507
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 600,
                "start": 1489741705507,
                "end": 1489741706107
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 704,
                "start": 1489741706109,
                "end": 1489741706813
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1016,
                "start": 1489741706813,
                "end": 1489741707829
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 1511,
                "start": 1489741707830,
                "end": 1489741709341
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 92,
                "start": 1489741709341,
                "end": 1489741709433
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
          "Then the event message is shown \"Here other options for you.\""
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741709502,
              "end": 1489741709503
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 6582,
              "start": 1489741709503,
              "end": 1489741716085
            },
            {
              "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
              "durationInMillis": 643,
              "start": 1489741716086,
              "end": 1489741716729
            },
            {
              "step": "Then the event message is shown \"Here other options for you.\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
              "durationInMillis": 644,
              "start": 1489741716730,
              "end": 1489741717374
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489741717375,
              "end": 1489741717397
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741717398,
              "end": 1489741717398
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
            "Then the event message is shown \"Here other options for you.\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Check that Feedback widget Elements are shown",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And Feedback widget is not shown",
          "When click Feedback button of Tutorials Widgets page",
          "Then Feedback widget elements are shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741717469,
              "end": 1489741717470
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1730,
              "start": 1489741717470,
              "end": 1489741719200
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And Feedback widget is not shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "35228b94-7c13-47ac-8860-e7cd7ad8d376"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then Feedback widget elements are shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then Feedback widget elements are shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "b1bd50c2-69b9-4a72-ad38-1db294b6cd7d"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 14,
              "start": 1489741719206,
              "end": 1489741719220
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741719220,
              "end": 1489741719221
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Check that Feedback widget Elements are shown",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And Feedback widget is not shown",
            "When click Feedback button of Tutorials Widgets page",
            "Then Feedback widget elements are shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget Close button",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When click Feedback button of Tutorials Widgets page",
          "Then click close button of Feedback widget",
          "And Feedback widget is not shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741719282,
              "end": 1489741719283
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1783,
              "start": 1489741719283,
              "end": 1489741721066
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 118,
              "start": 1489741721067,
              "end": 1489741721185
            },
            {
              "step": "Then click close button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then click close button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "3c127ba3-b961-463d-9c67-cd1e6737702f"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And Feedback widget is not shown",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "d1f32b1f-8582-4461-b222-9ff880f94efa"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 10,
              "start": 1489741721188,
              "end": 1489741721198
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741721198,
              "end": 1489741721198
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget Close button",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "When click Feedback button of Tutorials Widgets page",
            "Then click close button of Feedback widget",
            "And Feedback widget is not shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for NAME field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Name are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741721261,
              "end": 1489741721262
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1646,
              "start": 1489741721262,
              "end": 1489741722908
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 119,
              "start": 1489741722908,
              "end": 1489741723027
            },
            {
              "step": "When all fields except Name are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Name are populated",
              "durationInMillis": 413,
              "start": 1489741723028,
              "end": 1489741723441
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And click send button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "7d307a39-293e-427b-ace6-2a94403a9649"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then error notification is shown for Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "1a644a1c-168f-4922-a67d-09fc6578b32a"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 8,
              "start": 1489741723443,
              "end": 1489741723451
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741723451,
              "end": 1489741723451
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for NAME field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Name are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for Email field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Email are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741723512,
              "end": 1489741723513
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 3494,
              "start": 1489741723513,
              "end": 1489741727007
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 120,
              "start": 1489741727007,
              "end": 1489741727127
            },
            {
              "step": "When all fields except Email are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Email are populated",
              "durationInMillis": 400,
              "start": 1489741727128,
              "end": 1489741727528
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "And click send button of Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "30247e63-6e7b-40e8-8ccb-abaa2872fcdc"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "PENDING",
              "throwable": {
                "@class": "org.jbehave.core.failures.PendingStepFound",
                "detailMessage": "Then error notification is shown for Feedback widget",
                "stackTrace": [
                  "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                  "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                  "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                  "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:992)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:902)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "d0f32b7a-04a4-42f7-998e-d80f8af662db"
              },
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 9,
              "start": 1489741727530,
              "end": 1489741727539
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741727539,
              "end": 1489741727539
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for Email field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Email are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "Then the required fields are not empty on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741727602,
              "end": 1489741727602
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4274,
              "start": 1489741727602,
              "end": 1489741731876
            },
            {
              "step": "Then the required fields are not empty on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Map Widget page",
              "durationInMillis": 244,
              "start": 1489741731877,
              "end": 1489741732121
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34,
              "start": 1489741732122,
              "end": 1489741732156
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741732156,
              "end": 1489741732157
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.1 Map widget : Check that required fields are not empty]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "Then the required fields are not empty on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
          "And store all fields values on the Map Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Map Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741732227,
              "end": 1489741732228
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 3849,
              "start": 1489741732228,
              "end": 1489741736077
            },
            {
              "step": "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change all possible fields on the Map Widget page:\n［|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |］",
              "durationInMillis": 6567,
              "start": 1489741736077,
              "end": 1489741742644
            },
            {
              "step": "And store all fields values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Map Widget page",
              "durationInMillis": 629,
              "start": 1489741742646,
              "end": 1489741743275
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 764,
              "start": 1489741743275,
              "end": 1489741744039
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1738,
              "start": 1489741744040,
              "end": 1489741745778
            },
            {
              "step": "And embedded html code contains stored values on the Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Map Widget page",
              "durationInMillis": 783,
              "start": 1489741745779,
              "end": 1489741746562
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23,
              "start": 1489741746562,
              "end": 1489741746585
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741746585,
              "end": 1489741746586
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.2 Map widget : Embedded code functionality works properly]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And change all possible fields on the Map Widget page:\n|apiKey |keyWord|zipCode|city|attractionId|venueId|promoterId|source      |countryCode|classificationName|eventCount|\n|apikeys|adele  |90015  |York|333444      |222111 |9999      |ticketmaster|Canada     |movies            |50        |",
            "And store all fields values on the Map Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Map Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values on Map Widget page: apiKey,keyword,zipCode",
          "And change values for on Map Widget page: apiKey,keyword,zipCode",
          "When click reset button",
          "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741746651,
              "end": 1489741746652
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4277,
              "start": 1489741746652,
              "end": 1489741750929
            },
            {
              "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 192,
              "start": 1489741750930,
              "end": 1489741751122
            },
            {
              "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2263,
              "start": 1489741751123,
              "end": 1489741753386
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2739,
              "start": 1489741753387,
              "end": 1489741756126
            },
            {
              "step": "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values equals to stored values of fields on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 114,
              "start": 1489741756127,
              "end": 1489741756241
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22,
              "start": 1489741756241,
              "end": 1489741756263
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741756263,
              "end": 1489741756264
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.3 Map widget : Check RESET button functionality]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values on Map Widget page: apiKey,keyword,zipCode",
            "And change values for on Map Widget page: apiKey,keyword,zipCode",
            "When click reset button",
            "Then values equals to stored values of fields on Map Widget page: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And store values on Map Widget page: apiKey,keyword,zipCode",
          "And change values for on Map Widget page: apiKey,keyword,zipCode",
          "When click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741756327,
              "end": 1489741756328
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4361,
              "start": 1489741756328,
              "end": 1489741760689
            },
            {
              "step": "And store values on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 294,
              "start": 1489741760689,
              "end": 1489741760983
            },
            {
              "step": "And change values for on Map Widget page: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for on Map Widget page: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 2201,
              "start": 1489741760984,
              "end": 1489741763185
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 2729,
              "start": 1489741763186,
              "end": 1489741765915
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 1160,
              "start": 1489741765916,
              "end": 1489741767076
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 1423,
              "start": 1489741767076,
              "end": 1489741768499
            },
            {
              "step": "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code on Map Widget contains stored values of: ｟apiKey,keyword,zipCode｠",
              "durationInMillis": 225,
              "start": 1489741768499,
              "end": 1489741768724
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24,
              "start": 1489741768724,
              "end": 1489741768748
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741768748,
              "end": 1489741768748
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.4 Map widget : Check RESET button functionality on embedded pop-up window]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And store values on Map Widget page: apiKey,keyword,zipCode",
            "And change values for on Map Widget page: apiKey,keyword,zipCode",
            "When click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code on Map Widget contains stored values of: apiKey,keyword,zipCode"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741768812,
              "end": 1489741768812
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 3787,
              "start": 1489741768812,
              "end": 1489741772599
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 277,
              "start": 1489741772600,
              "end": 1489741772877
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 676,
              "start": 1489741772878,
              "end": 1489741773554
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 56,
              "start": 1489741773555,
              "end": 1489741773611
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741773611,
              "end": 1489741773612
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) [3.7.7 Map widget : Check links]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Map Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/MapWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741773678,
              "end": 1489741773678
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Map Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Map Widget page",
              "durationInMillis": 4281,
              "start": 1489741773679,
              "end": 1489741777960
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 388,
              "start": 1489741777961,
              "end": 1489741778349
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 499,
              "start": 1489741778350,
              "end": 1489741778849
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19,
              "start": 1489741778850,
              "end": 1489741778869
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741778869,
              "end": 1489741778870
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/map/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Map Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then Summary widget is shown for Getting Started page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741778934,
              "end": 1489741778934
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 4457,
              "start": 1489741778934,
              "end": 1489741783391
            },
            {
              "step": "Then Summary widget is shown for Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Getting Started page",
              "durationInMillis": 132,
              "start": 1489741783391,
              "end": 1489741783523
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31,
              "start": 1489741783523,
              "end": 1489741783554
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0,
              "start": 1489741783554,
              "end": 1489741783554
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then Summary widget is shown for Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then Summary widget is shown for Home page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741783637,
              "end": 1489741783638
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3495,
              "start": 1489741783638,
              "end": 1489741787133
            },
            {
              "step": "Then Summary widget is shown for Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Home page",
              "durationInMillis": 77,
              "start": 1489741787134,
              "end": 1489741787211
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26,
              "start": 1489741787212,
              "end": 1489741787238
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741787238,
              "end": 1489741787239
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then Summary widget is shown for Home page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then Summary widget is shown for API Explorer page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.preconditions.Before_User_Scenario.beforeEachScenario()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741787303,
              "end": 1489741787304
            }
          ]
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 4569,
              "start": 1489741787304,
              "end": 1489741791873
            },
            {
              "step": "Then Summary widget is shown for API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for API Explorer page",
              "durationInMillis": 519,
              "start": 1489741791874,
              "end": 1489741792393
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 117,
              "start": 1489741792393,
              "end": 1489741792510
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1,
              "start": 1489741792510,
              "end": 1489741792511
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0,
              "start": 0,
              "end": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then Summary widget is shown for API Explorer page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    }
  ]
}}